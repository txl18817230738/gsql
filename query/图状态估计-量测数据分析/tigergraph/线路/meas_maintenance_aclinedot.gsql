CREATE QUERY meas_maintenance_aclinedot(string companyID="113715890758877224", bool return_all=true) FOR GRAPH gsql_EMS { 
  TYPEDEF TUPLE <string edge_name, string device_type, double meas_overload, string overload_type, string from_sub, string from_subid, string to_sub, string to_subid, string from_bus_name, string from_id, string to_bus_name, string to_id, string volt,
  // from_side (positive direction)
  string P_mark, int P_mark_num, double M_P_TLPF, string Q_mark, int Q_mark_num, double M_Q_TLPF,  double Ri_eP, double Ri_eQ, double from_CP,
  // to_side (reverse direction)
  string P_mark_reverse, double M_P_TLPF_reverse, string Q_mark_reverse, double M_Q_TLPF_reverse, double Ri_eP_reverse, double Ri_eQ_reverse, double from_CP_reverse, double start_next_meas, double end_next_meas> line;
    SumAccum<INT> @@count_all;
    SumAccum<int> @island;
    SumAccum<string> @bus_name;
    SumAccum<string> @device_type;
    MapAccum<string, double> @@Ri_eP;
    MapAccum<string, double> @@Ri_eQ;
  HeapAccum<line>(10000000, P_mark_num DESC, Q_mark_num DESC, edge_name DESC) @@result;
  HeapAccum<line>(50, P_mark_num DESC, Q_mark_num DESC, edge_name DESC) @@result_part;

  SumAccum<string> @acline_name;
  SumAccum<string> @sub_name;
  SumAccum<string> @sub_id;
  SumAccum<string> @oppsite_sub_name;
  MapAccum<string, string> @@substation_Map; 
  SetAccum<string> @@Comp_ID;

  
  SumAccum<INT> @@count_20;
  SumAccum<INT> @@count_20_80;
  SumAccum<INT> @@count_80_100;
  SumAccum<INT> @@count_100;
  
  
  SumAccum<INT> @@count_500;
  SumAccum<INT> @@count_500_20;
  SumAccum<INT> @@count_500_20_80;
  SumAccum<INT> @@count_500_80_100;
  SumAccum<INT> @@count_500_100;
  
  SumAccum<INT> @@count_220;
  SumAccum<INT> @@count_220_20;
  SumAccum<INT> @@count_220_20_80;
  SumAccum<INT> @@count_220_80_100;
  SumAccum<INT> @@count_220_100;
  
  
  SumAccum<INT> @@count_110;
  SumAccum<INT> @@count_110_20;
  SumAccum<INT> @@count_110_20_80;
  SumAccum<INT> @@count_110_80_100;
  SumAccum<INT> @@count_110_100;
  
  
  SumAccum<INT> @@count_35;
  SumAccum<INT> @@count_35_20;
  SumAccum<INT> @@count_35_20_80;
  SumAccum<INT> @@count_35_80_100;
  SumAccum<INT> @@count_35_100;
  
  SumAccum<INT> @@count_10;
  SumAccum<INT> @@count_10_20;
  SumAccum<INT> @@count_10_20_80;
  SumAccum<INT> @@count_10_80_100;
  SumAccum<INT> @@count_10_100;
  
  SumAccum<INT> @@count_other;
  SumAccum<INT> @@count_other_20;
  SumAccum<INT> @@count_other_20_80;
  SumAccum<INT> @@count_other_80_100;
  SumAccum<INT> @@count_other_100;

  sub = {Substation.*};
  comp = {gridcom.*};
  Taclinedot = {ACline_dot.*};

  start_comp = select s from comp:s where s.id == companyID accum @@Comp_ID+= s.id;

  WHILE(start_comp.size()>0) DO
    start_comp = select t from start_comp:s-(gridcom_gridcom:e)->:t where t.id != s.parent_id accum @@Comp_ID+= t.id;
  END;

  sub = select t from comp:s-(connected_grid_sub:e)->:t where s.id in @@Comp_ID; 
        
  aclinedotSet = SELECT t FROM sub:s - (connected_Sub_Aclinedot:e) ->:t where s.subtype != "虚拟站" and s.subtype != "其他" and s.subtype != "线端连接站"
                accum
                t.@sub_name = s.name,
                t.@sub_id = s.strid;
                
	T0 = {TopoND.*};	

        Tacline = select t from T0:s- (topo_aclinedot:e) -:t
            accum
                t.@island = s.island,
                t.@bus_name = s.bus_name,
                t.@device_type = "AC传输线";
 
        Tacline1 = select s from Taclinedot:s -(aclinedot_aclinedot_reverse:e) -> :t
          where s.@island == 1 and t.@island == 1
          accum
             if e.name == "鲲宝甲线" then
                log(true,"check_weight_reverse", e.name, s.name, t.name, e.Ri_eP, e.Ri_eQ)
             end,
             @@Ri_eP += (e.name -> e.Ri_eP),
             @@Ri_eQ += (e.name -> e.Ri_eQ);
        
        Tacline = select s from aclinedotSet:s -(aclinedot_aclinedot:e) -> :t
	  where s.@island == 1 and t.@island == 1 
	  accum 
                        string P_mark = "",
                        string Q_mark = "",
                        int P_mark_num = 0,
                        int Q_mark_num = 0,
                        string P_mark_reverse = "",
                        string Q_mark_reverse = "",
                        
                        double p_rate = sqrt(3)*e.volt*e.Ih/1000,
                        double meas_overload = 0,
                        double cal_overload = 0,
                        string overload_type = "-",
                        if abs(p_rate) >= 0.5 then
                        meas_overload = abs(s.Pimeas/p_rate)*100,
                        cal_overload = abs(s.P/p_rate)*100
                        end,
                        if meas_overload >= 0 and meas_overload<=20 then
                            overload_type = "轻载"
                        else if meas_overload > 20 and meas_overload<=80 then
                            overload_type = "正常"
                        else if meas_overload > 80 and meas_overload<=100 then
                            overload_type = "重载"    
                        else if meas_overload > 100 then
                            overload_type = "过载"
                        end,
  
                        IF(s.Pimeas != 0) THEN
                                P_mark = "实测",
                                P_mark_num = 1
                        ELSE
                                P_mark = "无实测",
                                P_mark_num = 0
                        END,
                        IF(s.Qimeas != 0) THEN
                                Q_mark = "实测",
                                Q_mark_num = 1
                        ELSE
                                Q_mark = "无实测",
                                Q_mark_num = 0
                        END,
                        IF(t.Pimeas != 0) THEN
                                P_mark_reverse = "实测"
                        ELSE
                                P_mark_reverse = "无实测"
                        END,
                        IF(t.Qimeas != 0) THEN
                                Q_mark_reverse = "实测"
                        ELSE
                                Q_mark_reverse = "无实测"
                        END,
  
                        
                        @@result += line(e.name, s.@device_type, meas_overload, overload_type, s.Subname, s.Substation, t.Subname, t.Substation, s.@bus_name, convertToString(s.topoID), t.@bus_name, convertToString(t.topoID), convertToString(s.volt),
                        // from_side (positive direction)
                        P_mark, P_mark_num, s.Pimeas, Q_mark, Q_mark_num, s.Qimeas, e.Ri_eP, e.Ri_eQ, s.ACLine_CP,
                        // to_side (reverse direction)
                        P_mark_reverse, t.Pimeas, Q_mark_reverse, t.Qimeas, @@Ri_eP.get(e.name), @@Ri_eQ.get(e.name), t.ACLine_CP, s.meas_t_next,t.meas_t_next),
                        @@result_part += line(e.name, s.@device_type, meas_overload, overload_type, s.Subname, s.Substation, t.Subname, t.Substation, s.@bus_name, convertToString(s.topoID), t.@bus_name, convertToString(t.topoID), convertToString(s.volt),
                        // from_side (positive direction)
                        P_mark, P_mark_num, s.Pimeas, Q_mark, Q_mark_num, s.Qimeas, e.Ri_eP, e.Ri_eQ, s.ACLine_CP,
                        // to_side (reverse direction)
                        P_mark_reverse, t.Pimeas, Q_mark_reverse, t.Qimeas, @@Ri_eP.get(e.name), @@Ri_eQ.get(e.name), t.ACLine_CP, s.meas_t_next,t.meas_t_next),
                        
                        
                        
                        @@count_all += 1,
                        double volt = s.volt,
                        if volt >= 500 then
                  @@count_500 += 1,
                  if meas_overload >= 0 and meas_overload<=20 then
                    @@count_500_20+=1,
                    @@count_20+=1
                  else if meas_overload > 20 and meas_overload<=80 then
                    @@count_500_20_80+=1,
                    @@count_20_80+=1
                  else if meas_overload > 80 and meas_overload<=100 then
                    @@count_500_80_100+=1,
                    @@count_80_100+=1            
                  else if meas_overload > 100 then
                    @@count_500_100+=1,
                    @@count_100+=1
                  end            
                
                else if volt >= 220 then
                  @@count_220+=1,
                  if meas_overload >= 0 and meas_overload<=20 then
                    @@count_220_20+=1,
                    @@count_20+=1
                  else if meas_overload > 20 and meas_overload<=80 then
                    @@count_220_20_80+=1,
                    @@count_20_80+=1
                  else if meas_overload > 80 and meas_overload<=100 then
                    @@count_220_80_100+=1,
                    @@count_80_100+=1            
                  else if meas_overload > 100 then
                    @@count_220_100+=1,
                    @@count_100+=1
                  end
                  
                else if volt >= 110 then
                  @@count_110+=1,
                  if meas_overload >= 0 and meas_overload<=20 then
                    @@count_110_20+=1,
                    @@count_20+=1
                  else if meas_overload > 20 and meas_overload<=80 then
                    @@count_110_20_80+=1,
                    @@count_20_80+=1
                  else if meas_overload > 80 and meas_overload<=100 then
                    @@count_110_80_100+=1,
                    @@count_80_100+=1        
                  else if meas_overload > 100 then
                    @@count_110_100+=1,
                    @@count_100+=1
                  end
                  
                else if volt >= 34.5 then
                  @@count_35+=1,
                  if meas_overload >= 0 and meas_overload<=20 then
                    @@count_35_20+=1,
                    @@count_20+=1
                  else if meas_overload > 20 and meas_overload<=80 then
                    @@count_35_20_80+=1,
                    @@count_20_80+=1
                  else if meas_overload > 80 and meas_overload<=100 then
                    @@count_35_80_100+=1,
                    @@count_80_100+=1            
                  else if meas_overload > 100 then
                    @@count_35_100+=1,
                    @@count_100+=1
                  end
  
                else if volt >= 10 then
                  @@count_10+=1,
                  if meas_overload >= 0 and meas_overload<=20 then
                    @@count_10_20+=1,
                    @@count_20+=1
                  else if meas_overload > 20 and meas_overload<=80 then
                    @@count_10_20_80+=1,
                    @@count_20_80+=1
                  else if meas_overload > 80 and meas_overload<=100 then
                    @@count_10_80_100+=1,
                    @@count_80_100+=1            
                  else if meas_overload > 100 then
                    @@count_10_100+=1,
                    @@count_100+=1
                  end
                  
                else
                  @@count_other+=1,
                  if meas_overload >= 0 and meas_overload<=20 then
                    @@count_other_20+=1,
                    @@count_20+=1
                  else if meas_overload > 20 and meas_overload<=80 then
                    @@count_other_20_80+=1,
                    @@count_20_80+=1
                  else if meas_overload > 80 and meas_overload<=100 then
                    @@count_other_80_100+=1,
                    @@count_80_100+=1        
                  else if meas_overload > 100 then
                    @@count_other_100+=1,
                    @@count_100+=1
                  end
                end;
 
  if return_all then
    print @@result;
  else
    print @@result_part;
  end;
 
  print @@count_20;
  print @@count_20_80;
  print @@count_80_100;
  print @@count_100;
  
  
  print @@count_500;
  print @@count_500_20;
  print @@count_500_20_80;
  print @@count_500_80_100;
  print @@count_500_100;
  
  print @@count_220;
  print @@count_220_20;
  print @@count_220_20_80;
  print @@count_220_80_100;
  print @@count_220_100;
  
  
  print @@count_110;
  print @@count_110_20;
  print @@count_110_20_80;
  print @@count_110_80_100;
  print @@count_110_100;
  
  
  print @@count_35;
  print @@count_35_20;
  print @@count_35_20_80;
  print @@count_35_80_100;
  print @@count_35_100;
  
  print @@count_10;
  print @@count_10_20;
  print @@count_10_20_80;
  print @@count_10_80_100;
  print @@count_10_100;
  
  
  print @@count_other;
  print @@count_other_20;
  print @@count_other_20_80;
  print @@count_other_80_100;
  print @@count_other_100;
  
  print @@count_all;
}