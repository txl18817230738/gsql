CREATE QUERY pf_comparison_analyses_acline(string companyID="113715890758877224", bool return_all=true) FOR GRAPH gsql_EMS { 
TYPEDEF TUPLE <string edge_name, string from_sub, string from_subid, string from_bus, 
	double from_p, double from_pf_p, double from_diff_p, double from_q, double from_pf_q, double from_diff_q,
	double limit_value, double volt> line;
  SetAccum<string> @@Comp_ID;
  SumAccum<int> @island;
  SumAccum<string> @bus_name;

  SumAccum<INT> @@count_all;
  SumAccum<INT> @@count_all_5;
  SumAccum<INT> @@count_all_5_10;
  SumAccum<INT> @@count_all_10;
  
  SumAccum<INT> @@count_500;
  SumAccum<INT> @@count_500_5;
  SumAccum<INT> @@count_500_5_10;
  SumAccum<INT> @@count_500_10;
  
  SumAccum<INT> @@count_220;
  SumAccum<INT> @@count_220_5;
  SumAccum<INT> @@count_220_5_10;
  SumAccum<INT> @@count_220_10;
  
  SumAccum<INT> @@count_110;
  SumAccum<INT> @@count_110_5;
  SumAccum<INT> @@count_110_5_10;
  SumAccum<INT> @@count_110_10;
  
  SumAccum<INT> @@count_35;
  SumAccum<INT> @@count_35_5;
  SumAccum<INT> @@count_35_5_10;
  SumAccum<INT> @@count_35_10;
  
  SumAccum<INT> @@count_10;
  SumAccum<INT> @@count_10_5;
  SumAccum<INT> @@count_10_5_10;
  SumAccum<INT> @@count_10_10;
  
  SumAccum<INT> @@count_other;
  SumAccum<INT> @@count_other_5;
  SumAccum<INT> @@count_other_5_10;
  SumAccum<INT> @@count_other_10;
  
  HeapAccum<line>(50, from_diff_p DESC, edge_name DESC) @@result_part;
  HeapAccum<line>(10000000, from_diff_p DESC, edge_name DESC) @@result_all;
  
  sub = {Substation.*};
  comp = {gridcom.*};
  T0 = {TopoND.*};	
  
  start_comp = select s from comp:s where s.id == companyID accum @@Comp_ID+= s.id;

  WHILE(start_comp.size()>0) DO
    start_comp = select t from start_comp:s-(gridcom_gridcom:e)->:t where t.id != s.parent_id accum @@Comp_ID+= t.id;
  END;

  sub = select t from comp:s-(connected_grid_sub:e)->:t where s.id in @@Comp_ID; 
  
  aclinedotSet = SELECT t FROM sub:s - (connected_Sub_Aclinedot:e) ->:t where s.subtype != "虚拟站" and s.subtype != "其他" and s.subtype != "线端连接站";
  
  Tacline = select t from T0:s- (topo_aclinedot:e) -:t
            accum
                t.@island = s.island,
                t.@bus_name = s.bus_name;
         
    Tacline = select s from aclinedotSet:s -(aclinedot_aclinedot:e) - :t
	  where s.@island == 1 and t.@island == 1 
	  accum 
          double meas_overload = 0,
          double p_diff = 0,
          IF (s.P != 0) THEN
            p_diff = (abs(s.P_pf)-abs(s.P))/abs(s.P)*100
          END,
          double q_diff = 0,
          IF (s.Q != 0) THEN
            q_diff = (abs(s.Q_pf)-abs(s.Q))/abs(s.Q)*100
          END,
          IF p_diff > 2 THEN
              @@result_part += line(e.name, s.Subname, s.Substation, s.@bus_name,
                s.P, s.P_pf, p_diff, s.Q, s.Q_pf, q_diff, e.ratedMW,s.volt),
                @@result_all += line(e.name, s.Subname, s.Substation, s.@bus_name,
                s.P, s.P_pf, p_diff, s.Q, s.Q_pf, q_diff, e.ratedMW, s.volt),
              @@count_all += 1,

              double volt = s.volt,
               if volt >= 500 then
                  @@count_500 += 1,
                  IF p_diff <= 5 THEN
                    @@count_all_5 +=1,
                    @@count_500_5 +=1
                  else if p_diff <=10 then 
                    @@count_500_5_10 +=1,
                    @@count_all_5_10 +=1
                  else 
		                @@count_500_10 +=1,
                    @@count_all_10 +=1
                  END          
                
                else if volt >= 220 then
                  @@count_220+=1,
                   if p_diff <=5 then 
                      @@count_all_5 +=1,
                      @@count_220_5 +=1 
                   else if p_diff <=10  then 
                      @@count_220_5_10 +=1,
                      @@count_all_5_10 +=1
                   else 
		                  @@count_220_10 +=1,
                      @@count_all_10 +=1
                    end
                  
                else if volt >= 110 then
                  @@count_110+=1,
                   if p_diff <=5 then 
                      @@count_all_5 +=1,
                      @@count_110_5 +=1 
                   else if p_diff <=10  then 
                      @@count_110_5_10 +=1,
                      @@count_all_5_10 +=1
                   else 
                      @@count_110_10 +=1,
                      @@count_all_10 +=1
                    end
                  
                else if volt >= 34.5 then
                  @@count_35+=1,
                   if p_diff <=5 then 
                      @@count_all_5 +=1,
                      @@count_35_5 +=1 
                    else if p_diff <=10  then 
                      @@count_35_5_10 +=1,
                      @@count_all_5_10 +=1
                   else 
                     @@count_35_10 +=1,
                      @@count_all_10 +=1
                   end  
  
                else if volt >= 10 then
                  @@count_10+=1,
                   if p_diff <=5 then 
                      @@count_all_5 +=1,
                      @@count_10_5 +=1 
                   else if p_diff <=10  then 
                      @@count_10_5_10 +=1,
                      @@count_all_5_10 +=1
                   else 
		                  @@count_10_10 +=1,
                      @@count_all_10 +=1
                   end
                  
                else
                  @@count_other+=1,
                   if p_diff <=5 then 
                      @@count_all_5 +=1,
                      @@count_other_5 +=1 
                   else if p_diff <=10  then 
                      @@count_other_5_10 +=1,
                      @@count_all_5_10 +=1
                   else 
                    @@count_other_10 +=1,
                    @@count_all_10 +=1
                   end
                end
              END;
                
 
  	if return_all then
    print @@result_all;
  else
    print @@result_part;
  end;
  
  print @@count_all;
  print @@count_all_5;
  print @@count_all_5_10;
  print @@count_all_10;
  
  print @@count_500;
  print @@count_500_5;
  print @@count_500_5_10;
  print @@count_500_10;
  
  print @@count_220;
  print @@count_220_5;
  print @@count_220_5_10;
  print @@count_220_10;
  
  print @@count_110;
  print @@count_110_5;
  print @@count_110_5_10;
  print @@count_110_10;
  
  print @@count_35;
  print @@count_35_5;
  print @@count_35_5_10;
  print @@count_35_10;
  
  print @@count_10;
  print @@count_10_5;
  print @@count_10_5_10;
  print @@count_10_10;
  
  print @@count_other;
  print @@count_other_5;
  print @@count_other_5_10;
  print @@count_other_10;
}