CREATE QUERY ScreenFaultAnalysis(bool return_all=true) FOR GRAPH gsql_EMS { 
typedef tuple<int faultid, string faultname, string area, string Subname, string faultdevname, string faultdevtype, double volt, string faulttype, double SI> fault;

  SumAccum<string> @area;
  SumAccum<INT> @@count_all;
  SumAccum<INT> @@count_acline;
  SumAccum<INT> @@count_twoport;
  SumAccum<INT> @@count_threeport;
  SumAccum<INT> @@count_unit;
  SumAccum<INT> @@count_complex;  
  
  SumAccum<INT> @@count_500;
  SumAccum<INT> @@count_500_acline;
  SumAccum<INT> @@count_500_twoport;
  SumAccum<INT> @@count_500_threeport;
  SumAccum<INT> @@count_500_unit;
  SumAccum<INT> @@count_500_complex;
  
  SumAccum<INT> @@count_220;
  SumAccum<INT> @@count_220_acline;
  SumAccum<INT> @@count_220_twoport;
  SumAccum<INT> @@count_220_threeport;
  SumAccum<INT> @@count_220_unit;
  SumAccum<INT> @@count_220_complex;
  
  SumAccum<INT> @@count_110;
  SumAccum<INT> @@count_110_acline;
  SumAccum<INT> @@count_110_twoport;
  SumAccum<INT> @@count_110_threeport;
  SumAccum<INT> @@count_110_unit;
  SumAccum<INT> @@count_110_complex;
  
  SumAccum<INT> @@count_35;
  SumAccum<INT> @@count_35_acline;
  SumAccum<INT> @@count_35_twoport;
  SumAccum<INT> @@count_35_threeport;
  SumAccum<INT> @@count_35_unit;
  SumAccum<INT> @@count_35_complex;

  SumAccum<INT> @@count_10;
  SumAccum<INT> @@count_10_acline;
  SumAccum<INT> @@count_10_twoport;
  SumAccum<INT> @@count_10_threeport;
  SumAccum<INT> @@count_10_unit;
  SumAccum<INT> @@count_10_complex;
  
  SumAccum<INT> @@count_other;
  SumAccum<INT> @@count_other_acline;
  SumAccum<INT> @@count_other_twoport;
  SumAccum<INT> @@count_other_threeport;
  SumAccum<INT> @@count_other_unit;
  SumAccum<INT> @@count_other_complex;
  
  HeapAccum<fault>(50, SI desc) @@result_part;
  HeapAccum<fault>(1000000, SI desc) @@result;
	
	sub = {Substation.*};
  comp = {gridcom.*};
  Tfault = {Fault.*};

   sub = select t from comp:s-(connected_grid_sub:e)->:t
        accum
          t.@area = s.name;

   sub = select s from sub:s-((connected_Sub_Aclinedot|connected_Sub_Trans_two|connected_Sub_Trans_three|connected_Sub_Unit):e)->:t
        accum
          t.@area = s.@area;

   faultSet = select s from Tfault:s-((fault_aclinedot_select|fault_twoport_select|fault_threeport_select|fault_unit_select):e)-:t 
        accum
          s.@area = t.@area;

   faultSet = select s from Tfault:s-(faultgroup_fault)-:t
        accum
          double volt = s.volt.get(0),
          if s.faultdevtype.size() == 1 then
              @@result += fault(s.id, s.name, s.@area, s.faultdevSub.get(0), s.faultdevname.get(0), s.faultdevtype.get(0), volt, s.faulttype, s.SI),
              @@result_part += fault(s.id, s.name, s.@area, s.faultdevSub.get(0), s.faultdevname.get(0), s.faultdevtype.get(0), volt, s.faulttype, s.SI)
          else
              @@result += fault(s.id, s.name, s.@area, s.faultdevSub.get(0), s.faultdevname.get(0), "complex", volt, s.faulttype, s.SI),
              @@result_part += fault(s.id, s.name, s.@area, s.faultdevSub.get(0), s.faultdevname.get(0), "complex", volt, s.faulttype, s.SI)
          end,
          @@count_all += 1,
          if volt >= 500 then
                  @@count_500 += 1,
                if s.faultdevtype.size() == 1 then
                  if s.faultdevtype.get(0)  == "AClinedot" then
                    @@count_500_acline += 1,
                    @@count_acline += 1
                  else if s.faultdevtype.get(0)  == "two_port_transformer" then
                    @@count_500_twoport += 1,
                    @@count_twoport += 1
                  else if s.faultdevtype.get(0)  == "three_port_transformer" then
                    @@count_500_threeport += 1,
                    @@count_threeport += 1  
                  else if s.faultdevtype.get(0)  == "Unit" then
                    @@count_500_unit += 1,
                    @@count_unit += 1     
                  end 
                else    
                    @@count_500_complex += 1,
                    @@count_complex += 1
                end
                
                else if volt >= 220 then
                  @@count_220+=1,
                if s.faultdevtype.size() == 1 then
                  if s.faultdevtype.get(0) == "AClinedot" then
                    @@count_220_acline += 1,
                    @@count_acline += 1
                  else if s.faultdevtype.get(0) == "two_port_transformer" then
                    @@count_220_twoport += 1,
                    @@count_twoport += 1
                  else if s.faultdevtype.get(0) == "three_port_transformer" then
                    @@count_220_threeport += 1,
                    @@count_threeport += 1
                  else if s.faultdevtype.get(0) == "Unit" then
                    @@count_220_unit += 1,
                    @@count_unit += 1
                  end
                else
                    @@count_220_complex += 1,
                    @@count_complex += 1
                end
                  
                else if volt >= 110 then
                  @@count_110+=1,
                if s.faultdevtype.size() == 1 then
                  if s.faultdevtype.get(0)  == "AClinedot" then
                    @@count_110_acline += 1,
                    @@count_acline += 1
                  else if s.faultdevtype.get(0)  == "two_port_transformer" then
                    @@count_110_twoport += 1,
                    @@count_twoport += 1
                  else if s.faultdevtype.get(0)  == "three_port_transformer" then
                    @@count_110_threeport += 1,
                    @@count_threeport += 1
                  else if s.faultdevtype.get(0)  == "Unit" then
                    @@count_110_unit += 1,
                    @@count_unit += 1
                  end
                else
                    @@count_110_complex += 1,
                    @@count_complex += 1
                end
                  
                else if volt >= 34 then
                  @@count_35+=1,
                if s.faultdevtype.size() == 1 then
                  if s.faultdevtype.get(0)  == "AClinedot" then
                    @@count_35_acline += 1,
                    @@count_acline += 1
                  else if s.faultdevtype.get(0)  == "two_port_transformer" then
                    @@count_35_twoport += 1,
                    @@count_twoport += 1
                  else if s.faultdevtype.get(0)  == "three_port_transformer" then
                    @@count_35_threeport += 1,
                    @@count_threeport += 1
                  else if s.faultdevtype.get(0)  == "Unit" then
                    @@count_35_unit += 1,
                    @@count_unit += 1
                  end
                else
                    @@count_35_complex += 1,
                    @@count_complex += 1
                end
  
                else if volt >= 10 then
                  @@count_10+=1,
                if s.faultdevtype.size() == 1 then
                  if s.faultdevtype.get(0) == "AClinedot" then
                    @@count_10_acline += 1,
                    @@count_acline += 1
                  else if s.faultdevtype.get(0) == "two_port_transformer" then
                    @@count_10_twoport += 1,
                    @@count_twoport += 1
                  else if s.faultdevtype.get(0) == "three_port_transformer" then
                    @@count_10_threeport += 1,
                    @@count_threeport += 1
                  else if s.faultdevtype.get(0) == "Unit" then
                    @@count_10_unit += 1,
                    @@count_unit += 1
                  end
                else
                    @@count_10_complex += 1,
                    @@count_complex += 1
                end
                else
                  @@count_other+=1,
                if s.faultdevtype.size() == 1 then
                  if s.faultdevtype.get(0) == "AClinedot" then
                    @@count_other_acline += 1,
                    @@count_acline += 1
                  else if s.faultdevtype.get(0) == "two_port_transformer" then
                    @@count_other_twoport += 1,
                    @@count_twoport += 1
                  else if s.faultdevtype.get(0) == "three_port_transformer" then
                    @@count_other_threeport += 1,
                    @@count_threeport += 1
                  else if s.faultdevtype.get(0) == "Unit" then
                    @@count_other_unit += 1,
                    @@count_unit += 1
                  end
                else
                    @@count_other_complex += 1,
                    @@count_complex += 1
                end
                end;             
  if return_all then
    print @@result;
  else
    print @@result_part;
  end;
  
  print @@count_all;
  print @@count_acline;
  print @@count_twoport;
  print @@count_threeport;
  print @@count_unit;
  print @@count_complex;
  
  print @@count_500;
  print @@count_500_acline;
  print @@count_500_twoport;
  print @@count_500_threeport;
  print @@count_500_unit;
  print @@count_500_complex;
  
  print @@count_220;
  print @@count_220_acline;
  print @@count_220_twoport;
  print @@count_220_threeport;
  print @@count_220_unit;
  print @@count_220_complex;

  print @@count_110;
  print @@count_110_acline;
  print @@count_110_twoport;
  print @@count_110_threeport;
  print @@count_110_unit;
  print @@count_110_complex;
 
  print @@count_35;
  print @@count_35_acline;
  print @@count_35_twoport;
  print @@count_35_threeport;
  print @@count_35_unit;
  print @@count_35_complex;

  print @@count_10;
  print @@count_10_acline;
  print @@count_10_twoport;
  print @@count_10_threeport;
  print @@count_10_unit;
  print @@count_10_complex;

  print @@count_other;
  print @@count_other_acline;
  print @@count_other_twoport;
  print @@count_other_threeport;
  print @@count_other_unit;
  print @@count_other_complex;
}