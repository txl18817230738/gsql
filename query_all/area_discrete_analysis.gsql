CREATE QUERY area_discrete_analysis(string companyID="113715890758877224", string time, bool return_all=true, STRING searchTime="",STRING subName="") FOR GRAPH gsql_EMS syntax v2 { 
  TYPEDEF TUPLE<id string, devName string, strid string, status int, statusM int,  previous_time string, flag int, flagM int, subid string, subname string, subvolt double, type_name string, connecting_type string, connecting_dev string, dev_volt double> discrete_get;
HeapAccum<discrete_get>(10000000, previous_time DESC, subname DESC) @@discrete_all;
HeapAccum<discrete_get>(50, previous_time DESC, subname DESC) @@discrete;
SumAccum<INT> @@count_all;
SumAccum<INT> @@count_Breaker;
SumAccum<INT> @@count_Disconnector;

SumAccum<INT> @INode;
SumAccum<INT> @JNode;
SetAccum<string> @@Comp_ID;
SumAccum<string> @connecting_type;
SumAccum<string> @connecting_dev;
SumAccum<double> @dev_volt;

SumAccum<int> @@count_acline;
SumAccum<int> @@count_trans;
SumAccum<int> @@count_bus;
SumAccum<int> @@count_cp;
SumAccum<int> @@count_load;
SumAccum<int> @@count_unit;

  comp = {gridcom.*};
  
  start_comp = select s from comp:s where s.id == companyID accum @@Comp_ID+= s.id;

  WHILE(start_comp.size()>0) DO
    start_comp = select t from start_comp:s-(gridcom_gridcom:e)-:t where t.id != s.parent_id accum @@Comp_ID+= t.id;
  END;
  
  subSet = select t from comp:s-(connected_grid_sub:e)-:t where s.id in @@Comp_ID; 
  IF subName != "" THEN
    subSet = select t from comp:s-(connected_grid_sub:e)-:t where s.id in @@Comp_ID AND t.name==subName;
  END;
  
  discreteSet = SELECT t FROM subSet:s - (discrete_sub:e) -:t;
  
  discreteSet = SELECT s FROM discreteSet:s-((discrete_dis|discrete_breaker):e1)-(Disconnector|Breaker):t-((connected_Disconnector_CN|connected_Breaker_CN):e2)-CN:p
                accum 
                s.@INode = t.I_nd,
                s.@JNode = t.J_nd,
                s.@dev_volt = t.volt,
                s.@connecting_type = t.connecting_type,
                s.@connecting_dev = t.connecting_dev;

  discreteRes = SELECT s FROM discreteSet:s - (discrete_sub:e) -:t
                where s.id != ""
            ACCUM
            IF searchTime == "" THEN
              IF s.previous_time>=time THEN
                @@count_all += 1,
                if s.@connecting_type == "bus_split" then
                     @@count_bus += 1
                else if s.@connecting_type == "trans_open" then
                     @@count_trans += 1
                else if s.@connecting_type == "ACline_open" then
                     @@count_acline += 1
                else if s.@connecting_type == "CP_Switching" then
                     @@count_cp += 1
                else if s.@connecting_type == "load_Switching" then
                     @@count_load += 1
                else if s.@connecting_type == "unit_Switching" then
                     @@count_unit += 1
                end,
                if s.type_name == "Breaker" then
                  @@discrete += discrete_get(s.id, s.devName, s.strid, s.status, s.statusM, s.previous_time, s.flag, s.flagM, t.strid, t.name, t.volt, "开关", s.@connecting_type, s.@connecting_dev, s.@dev_volt),
                  @@discrete_all += discrete_get(s.id, s.devName, s.strid, s.status, s.statusM, s.previous_time, s.flag, s.flagM, t.strid, t.name, t.volt, "开关", s.@connecting_type, s.@connecting_dev, s.@dev_volt),
                  @@count_Breaker+=1
                else if s.type_name == "Disconnector" then
                  @@discrete += discrete_get(s.id, s.devName, s.strid, s.status, s.statusM, s.previous_time, s.flag, s.flagM, t.strid, t.name, t.volt, "刀闸", s.@connecting_type, s.@connecting_dev, s.@dev_volt),
                  @@discrete_all += discrete_get(s.id, s.devName, s.strid, s.status, s.statusM, s.previous_time, s.flag, s.flagM, t.strid, t.name, t.volt, "刀闸", s.@connecting_type, s.@connecting_dev, s.@dev_volt),
                  @@count_Disconnector+=1
                end
              end
            ELSE
              IF s.previous_time==searchTime THEN
                @@count_all += 1,
                if s.@connecting_type == "bus_split" then
                     @@count_bus += 1
                else if s.@connecting_type == "trans_open" then
                     @@count_trans += 1
                else if s.@connecting_type == "ACline_open" then
                     @@count_acline += 1
                else if s.@connecting_type == "CP_Switching" then  
                     @@count_cp += 1
                else if s.@connecting_type == "load_Switching" then
                     @@count_load += 1
                else if s.@connecting_type == "unit_Switching" then
                     @@count_unit += 1
                end,
                if s.type_name == "Breaker" then
                  @@discrete += discrete_get(s.id, s.devName, s.strid, s.status, s.statusM, s.previous_time, s.flag, s.flagM, t.strid, t.name, t.volt, "开关", s.@connecting_type, s.@connecting_dev, s.@dev_volt),                 
                  @@discrete_all += discrete_get(s.id, s.devName, s.strid, s.status, s.statusM, s.previous_time, s.flag, s.flagM, t.strid, t.name, t.volt, "开关", s.@connecting_type, s.@connecting_dev, s.@dev_volt),
                  @@count_Breaker+=1
                else if s.type_name == "Disconnector" then
                  @@discrete += discrete_get(s.id, s.devName, s.strid, s.status, s.statusM, s.previous_time, s.flag, s.flagM, t.strid, t.name, t.volt, "刀闸", s.@connecting_type, s.@connecting_dev, s.@dev_volt),
                  @@discrete_all += discrete_get(s.id, s.devName, s.strid, s.status, s.statusM, s.previous_time, s.flag, s.flagM, t.strid, t.name, t.volt, "刀闸", s.@connecting_type, s.@connecting_dev, s.@dev_volt),
                  @@count_Disconnector+=1
                end
              end
            END;
            
  
  if return_all then
    print @@discrete_all;
  else
    print @@discrete;
  END;
  PRINT @@count_all;
  PRINT @@count_Breaker;
  PRINT @@count_Disconnector;

  print @@count_bus;
  print @@count_trans;
  print @@count_acline;
  print @@count_cp;
  print @@count_load;
  print @@count_unit;
}