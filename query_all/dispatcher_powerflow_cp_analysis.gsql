CREATE QUERY dispatcher_powerflow_cp_analysis(string companyID="113715890758877224", bool return_all=true) FOR GRAPH gsql_EMS { 
 TYPEDEF TUPLE<string CP_name, string area, string sub_name, string sub_id, string bus_name, double volt, double desired_volts, double Q, double Q_pf, double q_ratio> CP_list;
		
	
	SumAccum<INT> @@count_all;
  SumAccum<INT> @island;
	SumAccum<string> @sub_name;
	SumAccum<string> @sub_id;
  SumAccum<string> @bus_name;
  SumAccum<string> @area;
  
  SumAccum<double> @Q_error_pct;
	HeapAccum<CP_list>(10000000, volt DESC, CP_name DESC, sub_name DESC) @@result;
	HeapAccum<CP_list>(50, volt DESC, CP_name DESC, sub_name DESC) @@result_part;
	SetAccum<string> @@Comp_ID;
  
	SumAccum<INT> @@count_5;
  SumAccum<INT> @@count_5_10;
  SumAccum<INT> @@count_above10;
  
  
  SumAccum<INT> @@count_500;
  SumAccum<INT> @@count_500_5;
  SumAccum<INT> @@count_500_5_10;
  SumAccum<INT> @@count_500_10;

  
  SumAccum<INT> @@count_220;
  SumAccum<INT> @@count_220_5;
  SumAccum<INT> @@count_220_5_10;
  SumAccum<INT> @@count_220_10;
  
  
  SumAccum<INT> @@count_110;
  SumAccum<INT> @@count_110_5;
  SumAccum<INT> @@count_110_5_10;
  SumAccum<INT> @@count_110_10;

  
  SumAccum<INT> @@count_35;
  SumAccum<INT> @@count_35_5;
  SumAccum<INT> @@count_35_5_10;
  SumAccum<INT> @@count_35_10;

  
  SumAccum<INT> @@count_10;
  SumAccum<INT> @@count_10_5;
  SumAccum<INT> @@count_10_5_10;
  SumAccum<INT> @@count_10_10;

  
  SumAccum<INT> @@count_other;
  SumAccum<INT> @@count_other_5;
  SumAccum<INT> @@count_other_5_10;
  SumAccum<INT> @@count_other_10;
  
  

	T0 = {TopoND.*};
	sub = {Substation.*};
	comp = {gridcom.*};


  start_comp = select s from comp:s where s.id == companyID accum @@Comp_ID+= s.id;

  WHILE(start_comp.size()>0) DO
    start_comp = select t from start_comp:s-(gridcom_gridcom:e)->:t where t.id != s.parent_id accum @@Comp_ID+= t.id;
  END;

  sub = select t from comp:s-(connected_grid_sub:e)->:t where s.id in @@Comp_ID
                accum 
                    t.@area =s.name;
	
  cpSet = SELECT t FROM sub:s - (connected_Sub_Compensator_P:e) ->:t
                accum
                t.@sub_name = s.name,
                t.@sub_id = s.strid,
                t.@area = s.@area;
  
  T_CP = SELECT s FROM cpSet:s	 
		 ACCUM
		 double q_ratio =0,
		 if(s.Q !=0) then 
		 	q_ratio =100* (abs(s.Q_pf) - abs(s.Q))/abs(s.Q)
		 end,
		 if q_ratio > 2 then 
		    @@result += CP_list(s.name, s.@area, s.@sub_name, s.@sub_id,s.@bus_name, s.volt, s.base_value, s.Q, s.Q_pf, q_ratio),
        @@result_part += CP_list(s.name, s.@area, s.@sub_name, s.@sub_id,s.@bus_name, s.volt, s.base_value, s.Q, s.Q_pf, q_ratio),
        @@count_all += 1,
			  double volt = s.volt,
			  if volt >= 500 then
                @@count_500 += 1,
	              if q_ratio <=5 then 
                  @@count_5 +=1,
                  @@count_500_5 +=1 
                else if q_ratio <=10  then 
                  @@count_500_5_10 +=1,
                  @@count_5_10 +=1
                 else 
		              @@count_500_10 +=1,
                  @@count_above10 +=1
               end
               else if volt >= 220 then
                   @@count_220+=1,
                   if q_ratio <=5 then 
                      @@count_5 +=1,
                      @@count_220_5 +=1 
                   else if q_ratio <=10  then 
                      @@count_220_5_10 +=1,
                      @@count_5_10 +=1
                   else 
		                  @@count_220_10 +=1,
                      @@count_above10 +=1
                    end
               else if volt >= 110 then
                     @@count_110+=1,
                     if q_ratio <=5 then 
                        @@count_5 +=1,
                        @@count_110_5 +=1 
                     else if q_ratio <=10  then 
                        @@count_110_5_10 +=1,
                        @@count_5_10 +=1
                     else 
				                @@count_110_10 +=1,
                        @@count_above10 +=1
                      end                
               else if volt >= 34.5 then
                     @@count_35+=1,
                     if q_ratio <=5 then 
                        @@count_5 +=1,
                        @@count_35_5 +=1 
                      else if q_ratio <=10  then 
                        @@count_35_5_10 +=1,
                        @@count_5_10 +=1
                     else 
		                   @@count_35_10 +=1,
                        @@count_above10 +=1
                     end     
               else if volt >= 10 then
                   @@count_10+=1,
                   if q_ratio <=5 then 
                      @@count_5 +=1,
                      @@count_10_5 +=1 
                   else if q_ratio <=10  then 
                      @@count_10_5_10 +=1,
                      @@count_5_10 +=1
                   else 
		                  @@count_10_10 +=1,
                      @@count_above10 +=1
                   end
               else
                   @@count_other+=1,
                     if q_ratio <=5 then 
                        @@count_5 +=1,
                        @@count_other_5 +=1 
                     else if q_ratio <=10  then 
                        @@count_other_5_10 +=1,
                        @@count_5_10 +=1
                     else 
		                  @@count_other_10 +=1,
                      @@count_above10 +=1
                   end
				        end
      end;
              
						
	if return_all then
    print @@result;
  else
    print @@result_part;
  end;
	
	print @@count_all;
  
  print @@count_5;
  print @@count_5_10;
  print @@count_above10;
  
  
  print @@count_500;
  print @@count_500_5;
  print @@count_500_5_10;
  print @@count_500_10;

  
  print @@count_220;
  print @@count_220_5;
  print @@count_220_5_10;
  print @@count_220_10;
  
  
  print @@count_110;
  print @@count_110_5;
  print @@count_110_5_10;
  print @@count_110_10;

  
  print @@count_35;
  print @@count_35_5;
  print @@count_35_5_10;
  print @@count_35_10;

  
  print @@count_10;
  print @@count_10_5;
  print @@count_10_5_10;
  print @@count_10_10;

  
  print @@count_other;
  print @@count_other_5;
  print @@count_other_5_10;
  print @@count_other_10;
}