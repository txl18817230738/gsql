create query meas_maintenance_trans3 (string companyID="113715890758877224", bool return_all=true)
for graph gsql_EMS {
  TYPEDEF TUPLE <string edge_name, string device_type, string sub_name, string sub_id, double meas_overload, string overload_type, string from_bus_name, string from_id, string to_bus_name, string to_id, string volt,
  string P_mark, int P_mark_num, double M_P_TLPF, string Q_mark, int Q_mark_num, double M_Q_TLPF,  double Ri_eP, double Ri_eQ> branch;
  

	SumAccum<string> @sub_id;
	SumAccum<INT> @@count_all;
    SumAccum<int> @island;
    SumAccum<string> @bus_name;
    SumAccum<string> @device_type;

    HeapAccum<branch>(10000000, P_mark_num DESC, Q_mark_num DESC, from_bus_name DESC, edge_name DESC) @@trans3_all;
	HeapAccum<branch>(50, P_mark_num DESC, Q_mark_num DESC, from_bus_name DESC, edge_name DESC) @@trans3_part;
	

  SetAccum<string> @@Comp_ID;

  
  SumAccum<INT> @@count_20;
  SumAccum<INT> @@count_20_80;
  SumAccum<INT> @@count_80_100;
  SumAccum<INT> @@count_100;
  
  
  SumAccum<INT> @@count_500;
  SumAccum<INT> @@count_500_20;
  SumAccum<INT> @@count_500_20_80;
  SumAccum<INT> @@count_500_80_100;
  SumAccum<INT> @@count_500_100;
  
  SumAccum<INT> @@count_220;
  SumAccum<INT> @@count_220_20;
  SumAccum<INT> @@count_220_20_80;
  SumAccum<INT> @@count_220_80_100;
  SumAccum<INT> @@count_220_100;
  
  
  SumAccum<INT> @@count_110;
  SumAccum<INT> @@count_110_20;
  SumAccum<INT> @@count_110_20_80;
  SumAccum<INT> @@count_110_80_100;
  SumAccum<INT> @@count_110_100;
  
  
  SumAccum<INT> @@count_35;
  SumAccum<INT> @@count_35_20;
  SumAccum<INT> @@count_35_20_80;
  SumAccum<INT> @@count_35_80_100;
  SumAccum<INT> @@count_35_100;
  
  SumAccum<INT> @@count_10;
  SumAccum<INT> @@count_10_20;
  SumAccum<INT> @@count_10_20_80;
  SumAccum<INT> @@count_10_80_100;
  SumAccum<INT> @@count_10_100;
  
  SumAccum<INT> @@count_other;
  SumAccum<INT> @@count_other_20;
  SumAccum<INT> @@count_other_20_80;
  SumAccum<INT> @@count_other_80_100;
  SumAccum<INT> @@count_other_100;
	
  sub = {Substation.*};
  comp = {gridcom.*};

  start_comp = select s from comp:s where s.id == companyID accum @@Comp_ID+= s.id;

  WHILE(start_comp.size()>0) DO
    start_comp = select t from start_comp:s-(gridcom_gridcom:e)->:t where t.id != s.parent_id accum @@Comp_ID+= t.id;
  END;

  sub = select t from comp:s-(connected_grid_sub:e)->:t where s.id in @@Comp_ID; 
        
  trans3tSet = SELECT t FROM sub:s - (connected_Sub_Trans_three:e) ->:t
                accum
                t.@sub_id = s.strid;
                
	T0 = {TopoND.*};	

    Ttrans3 = select t from T0:s- (topo_Tx_Three:e) -:t
            accum
                t.@island = s.island,
                t.@bus_name = s.bus_name,
                t.@device_type = "三绕组变压器";
         
    Ttrans3 = select s from trans3tSet:s - (neutral_three:e) - :t
	  where s.@island == 1
	  accum 
                        string P_mark = "",
                        string Q_mark = "",
                        int P_mark_num = 0,
                        int Q_mark_num = 0,
                        
                        double p_rate = s.S,
                        double meas_overload = 0,
                        string overload_type = "-",
                        if abs(p_rate) >= 0.5 then
                        meas_overload = abs(s.Pimeas/p_rate)*100
                        end,
                        if meas_overload >= 0 and meas_overload<=20 then
                            overload_type = "轻载"
                        else if meas_overload > 20 and meas_overload<=80 then
                            overload_type = "正常"
                        else if meas_overload > 80 and meas_overload<=100 then
                            overload_type = "重载"    
                        else if meas_overload > 100 then
                            overload_type = "过载"
                        end,
  
                        IF(s.Pimeas != 0) THEN
                                P_mark = "实测",
                                P_mark_num = 1
                        ELSE
                                P_mark = "无实测",
                                P_mark_num = 0
                        END,
                        IF(s.Qimeas != 0) THEN
                                Q_mark = "实测",
                                Q_mark_num = 1
                        ELSE
                                Q_mark = "无实测",
                                Q_mark_num = 0
                        END,
  
                        @@trans3_all += branch(s.name, s.@device_type, s.Substation, s.@sub_id, meas_overload, overload_type, s.@bus_name, convertToString(s.topoID), t.name, convertToString(t.id), convertToString(s.volt),
                        P_mark, P_mark_num, s.Pimeas, Q_mark, Q_mark_num, s.Qimeas, e.Ri_eP, e.Ri_eQ),
                        @@trans3_part += branch(s.name, s.@device_type, s.Substation, s.@sub_id, meas_overload, overload_type, s.@bus_name, convertToString(s.topoID), t.name, convertToString(t.id), convertToString(s.volt),
                        // from_side (positive direction)
                        P_mark, P_mark_num, s.Pimeas, Q_mark, Q_mark_num, s.Qimeas, e.Ri_eP, e.Ri_eQ),

                        @@count_all += 1,
                        double volt = s.volt,
                        if volt >= 500 then
                  @@count_500 += 1,
                  if meas_overload >= 0 and meas_overload<=20 then
                    @@count_500_20+=1,
                    @@count_20+=1
                  else if meas_overload > 20 and meas_overload<=80 then
                    @@count_500_20_80+=1,
                    @@count_20_80+=1
                  else if meas_overload > 80 and meas_overload<=100 then
                    @@count_500_80_100+=1,
                    @@count_80_100+=1            
                  else if meas_overload > 100 then
                    @@count_500_100+=1,
                    @@count_100+=1
                  end            
                
                else if volt >= 220 then
                  @@count_220+=1,
                  if meas_overload >= 0 and meas_overload<=20 then
                    @@count_220_20+=1,
                    @@count_20+=1
                  else if meas_overload > 20 and meas_overload<=80 then
                    @@count_220_20_80+=1,
                    @@count_20_80+=1
                  else if meas_overload > 80 and meas_overload<=100 then
                    @@count_220_80_100+=1,
                    @@count_80_100+=1            
                  else if meas_overload > 100 then
                    @@count_220_100+=1,
                    @@count_100+=1
                  end
                  
                else if volt >= 110 then
                  @@count_110+=1,
                  if meas_overload >= 0 and meas_overload<=20 then
                    @@count_110_20+=1,
                    @@count_20+=1
                  else if meas_overload > 20 and meas_overload<=80 then
                    @@count_110_20_80+=1,
                    @@count_20_80+=1
                  else if meas_overload > 80 and meas_overload<=100 then
                    @@count_110_80_100+=1,
                    @@count_80_100+=1        
                  else if meas_overload > 100 then
                    @@count_110_100+=1,
                    @@count_100+=1
                  end
                  
                else if volt >= 34.5 then
                  @@count_35+=1,
                  if meas_overload >= 0 and meas_overload<=20 then
                    @@count_35_20+=1,
                    @@count_20+=1
                  else if meas_overload > 20 and meas_overload<=80 then
                    @@count_35_20_80+=1,
                    @@count_20_80+=1
                  else if meas_overload > 80 and meas_overload<=100 then
                    @@count_35_80_100+=1,
                    @@count_80_100+=1            
                  else if meas_overload > 100 then
                    @@count_35_100+=1,
                    @@count_100+=1
                  end
  
                else if volt >= 10 then
                  @@count_10+=1,
                  if meas_overload >= 0 and meas_overload<=20 then
                    @@count_10_20+=1,
                    @@count_20+=1
                  else if meas_overload > 20 and meas_overload<=80 then
                    @@count_10_20_80+=1,
                    @@count_20_80+=1
                  else if meas_overload > 80 and meas_overload<=100 then
                    @@count_10_80_100+=1,
                    @@count_80_100+=1            
                  else if meas_overload > 100 then
                    @@count_10_100+=1,
                    @@count_100+=1
                  end
                  
                else
                  @@count_other+=1,
                  if meas_overload >= 0 and meas_overload<=20 then
                    @@count_other_20+=1,
                    @@count_20+=1
                  else if meas_overload > 20 and meas_overload<=80 then
                    @@count_other_20_80+=1,
                    @@count_20_80+=1
                  else if meas_overload > 80 and meas_overload<=100 then
                    @@count_other_80_100+=1,
                    @@count_80_100+=1        
                  else if meas_overload > 100 then
                    @@count_other_100+=1,
                    @@count_100+=1
                  end
                end;
	
  if return_all then
    print @@trans3_all;
  else
    print @@trans3_part;
  end;
 
  print @@count_20;
  print @@count_20_80;
  print @@count_80_100;
  print @@count_100;
  
  
  print @@count_500;
  print @@count_500_20;
  print @@count_500_20_80;
  print @@count_500_80_100;
  print @@count_500_100;
  
  print @@count_220;
  print @@count_220_20;
  print @@count_220_20_80;
  print @@count_220_80_100;
  print @@count_220_100;
  
  
  print @@count_110;
  print @@count_110_20;
  print @@count_110_20_80;
  print @@count_110_80_100;
  print @@count_110_100;
  
  
  print @@count_35;
  print @@count_35_20;
  print @@count_35_20_80;
  print @@count_35_80_100;
  print @@count_35_100;
  
  print @@count_10;
  print @@count_10_20;
  print @@count_10_20_80;
  print @@count_10_80_100;
  print @@count_10_100;
  
  
  print @@count_other;
  print @@count_other_20;
  print @@count_other_20_80;
  print @@count_other_80_100;
  print @@count_other_100;
  
  print @@count_all;
		 
}