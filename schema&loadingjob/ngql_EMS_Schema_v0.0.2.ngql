"""
CREATE GRAPH TYPE IF NOT EXISTS EMS_TYPE_v1 AS {
    (`parameters` LABELS `parameters` {`id` INT PRIMARY KEY, `initial_Vm` DOUBLE, `initial_Va` DOUBLE, `pf_MaxChange_P` DOUBLE, `pf_MaxChange_Q` DOUBLE, `pf_MaxIter` INT, `pf_flatstart` INT, `pf_outputfile` STRING, `se_MaxChange_Vm` DOUBLE, `se_MaxChange_Va` DOUBLE, `se_MaxIter` INT, `se_flatstart` INT, `se_outputfile` STRING, `ca_NumOfDetail` INT, `ca_flatstart` INT, `ca_MaxIter` INT, `ca_MaxChange_P` DOUBLE, `ca_MaxChange_Q` DOUBLE, `ca_outputfile` STRING, `error_limit_P` DOUBLE, `error_limit_Q` DOUBLE, `balance_limit_P` DOUBLE, `balance_limit_Q` DOUBLE, `meas_yield_limit_P` DOUBLE, `meas_yield_limit_Q` DOUBLE, `meas_yield_limit_V` DOUBLE, `slack_bus_name` STRING, `EMS_cycle` INT, `history_save_interval` INT, `p_pf_error_limit` DOUBLE, `q_pf_error_limit` DOUBLE, `v_pf_error_limit` DOUBLE, `manual_entry_flag` INT, `full_topo_flag` INT, `fastscreen_cycle` INT, `acline_alarm_OLcount` INT, `trans_alarm_OLcount` INT, `unit_alarm_OLcount` INT, `bus_alarm_OLcount` INT, `case_alarm_OLcount` INT, `acline_screen_flag` INT, `trans_screen_flag` INT, `unit_screen_flag` INT, `bus_screen_flag` INT, `complex_screen_flag` INT, `acline_moniter_flag` INT, `trans_moniter_flag` INT, `unit_moniter_flag` INT, `bus_moniter_flag` INT, `complex_moniter_flag` INT, `backup1` INT, `backup2` INT, `backup3` INT, `backup4` DOUBLE, `backup5` DOUBLE}),
    (`status` LABELS `status` {`id` INT PRIMARY KEY, `SCADA_time` STRING, `last_history_time` STRING, `curIter` INT, `analog_meas_number` INT, `analog_point_number` INT, `analog_meas_manual_number` INT, `analog_point_manual_number` INT, `graphUpdate_starttime` STRING, `graphUpdate_status` STRING, `graphUpdate_endtine` STRING, `graphUpdate_time` STRING, `NTP_starttime` STRING, `NTP_status` STRING, `NTP_endtime` STRING, `NTP_time` STRING, `NTP_mode` INT, `pf_starttime` STRING, `pf_status` STRING, `pf_endtime` STRING, `pf_time` STRING, `pf_start_mode` INT, `pf_iteration` INT, `pf_convergence_P` DOUBLE, `pf_convergence_Q` DOUBLE, `pf_method` STRING, `se_starttime` STRING, `se_status` STRING, `se_endtime` STRING, `se_time` STRING, `se_start_mode` INT, `se_iteration` INT, `se_convergence_Va` DOUBLE, `se_convergence_Vm` DOUBLE, `se_method` STRING, `ca_starttime` STRING, `ca_status` STRING, `id_starttime` STRING, `id_endtime` STRING, `fastscreen_endtime` STRING, `ca_endtime` STRING, `ca_time` STRING, `ca_screening_case` INT, `ca_method` STRING, `ca_DPF_case` INT, `NumofNodes` INT, `NumofEdges` INT, `se_accuracy_value` DOUBLE, `se_Vaccuracy_value` DOUBLE, `se_Paccuracy_value` DOUBLE, `se_Qaccuracy_value` DOUBLE, `se_cover_range` DOUBLE, `se_available_month` DOUBLE, `se_converge_Num` INT, `se_noneconverge_Num` INT, `se_meas_yield` DOUBLE, `se_line_meas_yield` DOUBLE, `se_trans_meas_yield` DOUBLE, `se_volt_meas_yield` DOUBLE, `se_unit_meas_yield` DOUBLE, `se_load_meas_yield` DOUBLE, `meas_dismatch_Num` INT, `discrete_dismatch_Num` INT, `island_Num` INT, `pf_accuracy_value` DOUBLE, `pf_Vaccuracy_value` DOUBLE, `pf_Paccuracy_value` DOUBLE, `pf_Qaccuracy_value` DOUBLE, `pf_available_month` DOUBLE, `pf_converge_Num` INT, `pf_noneconverge_Num` INT, `meas_qualified` DOUBLE, `meas_accuracy` DOUBLE, `NTP_topo_endtime` STRING, `NTP_topo_time` STRING, `NTP_data_time` STRING, `EMS_cycle` INT}),
    (`TopoND` LABELS `TopoND` {`topoid` INT PRIMARY KEY, `TOPOID` INT, `exId` INT, `island` INT, `bus_name` STRING, `area` STRING, `loss_zone` INT, `busType` INT, `Vm` DOUBLE, `Va` DOUBLE, `cal_Vm` DOUBLE, `cal_Va` DOUBLE, `M_Vm` DOUBLE, `M_Va` DOUBLE, `Ri_V` DOUBLE, `base_kV` DOUBLE, `desired_volts` DOUBLE, `control_bus_number` INT, `up_V` DOUBLE, `lo_V` DOUBLE, `GenP` DOUBLE, `GenQ` DOUBLE, `M_Gen_P` DOUBLE, `M_Gen_Q` DOUBLE, `qUp` DOUBLE, `qLower` DOUBLE, `LdP` DOUBLE, `LdQ` DOUBLE, `P` DOUBLE, `Q` DOUBLE, `cal_P` DOUBLE, `cal_Q` DOUBLE, `M_Load_P` DOUBLE, `M_Load_Q` DOUBLE, `G` DOUBLE, `B` DOUBLE, `Sub` STRING, `longitude` DOUBLE, `latitude` DOUBLE, `OV` INT, `UV` INT, `Ri_vP` DOUBLE, `Ri_vQ` DOUBLE, `sumB` DOUBLE, `sumG` DOUBLE, `sumBi` DOUBLE, `volt` DOUBLE, `pos_x` DOUBLE, `pos_y` DOUBLE, `SE_Vm` DOUBLE, `SE_Va` DOUBLE, `PF_Vm` DOUBLE, `PF_Va` DOUBLE, `M_C_P` DOUBLE, `start_pt` INT, `outdegree` INT, `nodeSI` DOUBLE, `node_SI_order` INT, `nodeCSeverity` DOUBLE, `ZJP` INT, `ZJQ` INT, `xk_hB` DOUBLE, `x` DOUBLE, `y` DOUBLE, `volt_mag_variation` DOUBLE, `est_error` DOUBLE, `est_value_of_value` DOUBLE, `abs_value_of_volt_residual` DOUBLE, `MVA_pf` DOUBLE,  `MVA_se` DOUBLE}),
    (`ACline_dot` LABELS `ACline_dot` {`AClinedot` INT PRIMARY KEY, `topoID` INT, `id` INT, `name` STRING, `nd` INT, `off` INT, `Pimeas` DOUBLE, `Qimeas` DOUBLE, `typename` STRING, `volt` DOUBLE, `base_value` DOUBLE, `strid` STRING, `AClineSegment` STRING, `BaseVoltage` STRING, `VoltageLevel` STRING, `Substation` STRING, `Subname` STRING, `Bay` STRING, `region_id` INT, `P` DOUBLE, `Q` DOUBLE, `P_pf` DOUBLE, `Q_pf` DOUBLE, `ACLine_CP` DOUBLE, `SC_I` DOUBLE, `SC_V` DOUBLE, `Transient_I` DOUBLE, `Transient_V` DOUBLE, `p_se_error` DOUBLE, `q_se_error` DOUBLE, `p_pf_error` DOUBLE, `q_pf_error` DOUBLE, `Rstar_base` DOUBLE, `Xstar_base` DOUBLE, `Rstar` DOUBLE, `Xstar` DOUBLE, `B_base` DOUBLE, `loss` DOUBLE, `Decision` INT, `detailed_flag` INT, `SI` DOUBLE, `line_Q1` DOUBLE, `line_Q2` DOUBLE, `line_Q3` DOUBLE, `OverLimit_flag` INT, `OverLimit_count` INT, `Fault_count` INT, `fault_rate` DOUBLE, `weak_index` DOUBLE, `meas_t_next` DOUBLE, `parameter1` DOUBLE, `parameter2` DOUBLE, `parameter3` DOUBLE, `island` INT, `cal_bus_name` STRING, `cal_bus_id` STRING, `load_factor` DOUBLE, `p_pf_diff` DOUBLE}),
    (`ACline` LABELS `ACline` {`ACline` INT PRIMARY KEY, `id` INT, `name` STRING, `EqFlag` STRING, `StartST` STRING, `J_node` STRING, `EndST` STRING, `bch_pu` DOUBLE, `gid` STRING, `BaseVoltage` DOUBLE, `bch` DOUBLE, `ratedA` DOUBLE, `oid` STRING, `code` STRING, `BaseVoltageId` STRING, `r` DOUBLE, `rPU` DOUBLE, `x` DOUBLE, `I_node` STRING, `MemberOf_Line` STRING, `Terminals` STRING, `xPU` DOUBLE, `node_1` STRING, `node_2` STRING, `terminal_1` STRING, `terminal_2` STRING}),
    (`AClineSegment` LABELS `AClineSegment` {`AClineSegment` INT PRIMARY KEY, `id` INT, `name` STRING, `volt` DOUBLE, `ratedMW` DOUBLE, `Eq` INT, `R` DOUBLE, `X` DOUBLE, `B` DOUBLE, `I_node` STRING, `J_node` STRING, `I_P` DOUBLE, `I_Q` DOUBLE, `J_P` DOUBLE, `J_Q` DOUBLE, `Ih` DOUBLE, `I_nd` INT, `J_nd` INT, `I_bs` INT, `J_bs` INT, `I_island` STRING, `J_island` STRING, `line_R` DOUBLE, `line_X` DOUBLE, `line_B` DOUBLE, `pos_x` DOUBLE, `pos_y` DOUBLE, `itopoID` INT, `jtopoID` INT, `updatestatus` INT, `I_mRID` INT, `J_mRID` INT, `pimeas` DOUBLE, `qimeas` DOUBLE, `strid` STRING, `Ri_eP` DOUBLE, `Ri_eQ` DOUBLE, `CA_bridge` INT, `Mainland_side` INT}),
    (`BUS` LABELS `BUS` {`busid` INT PRIMARY KEY, `topoID` INT, `id` INT, `name` STRING, `volt` DOUBLE, `node` STRING, `V` DOUBLE, `Ang` DOUBLE, `off` INT, `Pimeas` DOUBLE, `Qimeas` DOUBLE, `Ang_meas` DOUBLE, `nd` INT, `bs` INT, `island` STRING, `v_max` DOUBLE, `v_min` DOUBLE, `pos_x` DOUBLE, `pos_y` DOUBLE, `typename` STRING, `base_value` DOUBLE, `updatestatus` INT, `strid` STRING, `BaseVoltage` STRING, `VoltageLevel` STRING, `Substation` STRING, `Bay` STRING, `region_id` INT, `V_pf` DOUBLE, `Ang_pf` DOUBLE, `Ri_V` DOUBLE, `SC_V` DOUBLE, `Transient_V` DOUBLE, `v_se_error` DOUBLE, `v_pf_error` DOUBLE, `Decision` INT, `detailed_flag` INT, `SI` DOUBLE, `OverLimit_flag` INT, `OverLimit_count` INT, `Fault_count` INT, `fault_rate` DOUBLE, `weak_index` DOUBLE, `V_t_next` DOUBLE, `Ang_t_next` DOUBLE, `parameter1` DOUBLE, `parameter2` DOUBLE, `parameter3` DOUBLE, `cal_bus_name` STRING, `cal_bus_id` STRING}),
    (`C_P` LABELS `C_P` {`compensatorPid` INT PRIMARY KEY, `topoID` INT, `id` INT, `name` STRING, `volt` DOUBLE, `Q_rate` DOUBLE, `V_rate` DOUBLE, `position` STRING, `node` STRING, `P` DOUBLE, `Q` DOUBLE, `off` INT, `Pimeas` DOUBLE, `Qimeas` DOUBLE, `nd` INT, `bs` INT, `island` STRING, `pos_x` DOUBLE, `pos_y` DOUBLE, `typename` STRING, `base_value` DOUBLE, `updatestatus` INT, `strid` STRING, `BaseVoltage` STRING, `VoltageLevel` STRING, `Substation` STRING, `Bay` STRING, `region_id` INT, `P_pf` DOUBLE, `Q_pf` DOUBLE, `q_se_error` DOUBLE, `q_pf_error` DOUBLE, `q_base` DOUBLE, `cal_bus_name` STRING, `cal_bus_id` STRING}),
    (`C_S` LABELS `C_S` {`compensatorSid` INT PRIMARY KEY, `topoID` INT, `id` INT, `name` STRING, `volt` DOUBLE, `Q_rate` DOUBLE, `V_rate` DOUBLE, `I_node` STRING, `J_node` STRING, `Zk` DOUBLE, `off` INT, `Pimeas` DOUBLE, `Qimeas` DOUBLE, `Pj_meas` DOUBLE, `Qj_meas` DOUBLE, `Ih` INT, `Zk_max` DOUBLE, `Zk_min` DOUBLE, `Line` STRING, `I_nd` INT, `J_nd` INT, `I_bs` INT, `J_bs` INT, `I_island` STRING, `J_island` STRING, `cs_ZK` DOUBLE, `point` INT, `pos_x` DOUBLE, `pos_y` DOUBLE, `itopoID` INT, `jtopoID` INT, `strid` STRING, `r` DOUBLE, `BaseVoltage` STRING, `VoltageLevel` STRING, `Substation` STRING, `Bay` STRING, `region_id` INT, `typename` STRING, `q_se_error` DOUBLE, `q_pf_error` DOUBLE, `Xstar_base` DOUBLE}),
    (`Convertor` LABELS `Convertor` {`convertorid` STRING PRIMARY KEY, `topoID` INT, `id` INT, `name` STRING, `N` INT, `I_DCNAME` STRING, `J_DCNAME` STRING, `N_ACNAME` STRING, `Vdc` INT, `Idc` INT, `Wdc` INT, `Pac` INT, `Qac` DOUBLE, `Mode` INT, `state` INT, `off` INT, `Ang` INT, `Vdc_meas` STRING, `Idc_meas` STRING, `Wdc_meas` STRING, `Pac_meas` STRING, `Qac_meas` STRING, `Ang_meas` STRING, `Wdc_rate` STRING, `Ang_max` INT, `Ang_min` INT, `Wdc_Rate` INT, `Kt` INT, `I_dcnd` INT, `J_dcnd` INT, `N_acnd` INT, `I_dcbs` INT, `J_dcbs` INT, `N_acbs` INT, `pos_x` DOUBLE, `pos_y` DOUBLE, `strid` STRING}),
     (`l_oad` LABELS `l_oad` {`loadid` INT PRIMARY KEY, `topoID` INT, `id` INT, `name` STRING, `volt` DOUBLE, `Eq` INT, `position` STRING, `node` STRING, `P` DOUBLE, `Q` DOUBLE, `off` INT, `Pimeas` DOUBLE, `Qimeas` DOUBLE, `nd` INT, `bs` INT, `island` STRING, `pos_x` DOUBLE, `pos_y` DOUBLE, `typename` STRING, `base_value` DOUBLE, `updatestatus` INT, `strid` STRING, `BaseVoltage` STRING, `VoltageLevel` STRING, `Substation` STRING, `Bay` STRING, `region_id` INT, `P_pf` DOUBLE, `Q_pf` DOUBLE, `p_se_error` DOUBLE, `q_se_error` DOUBLE, `p_pf_error` DOUBLE, `q_pf_error` DOUBLE, `P_base` DOUBLE, `Q_base` DOUBLE, `distribution_gen_flag` INT, `fault_rate` DOUBLE, `weak_index` DOUBLE, `meas_t_next` DOUBLE, `parameter1` DOUBLE, `parameter2` DOUBLE, `parameter3` DOUBLE, `cal_bus_name` STRING, `cal_bus_id` STRING}),
    (`TransformWinding` LABELS `TransformWinding` {`transformwindingID` INT PRIMARY KEY, `topoID` INT, `id` INT, `name` STRING, `type_two` STRING, `volt` DOUBLE, `S` DOUBLE, `itapH` DOUBLE, `itapL` DOUBLE, `itapC` DOUBLE, `R` DOUBLE, `X` DOUBLE, `node` STRING, `P` DOUBLE, `Q` DOUBLE, `off` INT, `Pimeas` DOUBLE, `Qimeas` DOUBLE, `nd` INT, `bs` DOUBLE, `island` STRING, `Rstar` DOUBLE, `Xstar` DOUBLE, `t` DOUBLE, `base` DOUBLE, `pos_x` DOUBLE, `pos_y` DOUBLE, `type_name` STRING, `base_value` DOUBLE, `updatestatus` INT, `strid` STRING, `WindingType` STRING, `Substation` STRING, `PowerTransformer` STRING, `knd` INT, `BaseVoltage` STRING, `VoltageLevel` STRING, `TapChangerType` STRING, `ratedMVA` DOUBLE, `ratedkV` DOUBLE, `loadLoss` DOUBLE, `leakageImpedence` DOUBLE, `r` DOUBLE, `x` DOUBLE, `r0` DOUBLE, `x0` DOUBLE, `D` DOUBLE, `Bay` STRING, `region_id` INT, `typetype` STRING, `typename` STRING, `neutralStep` STRING, `highStep` STRING, `lowStep` STRING, `stepVolIncre` STRING, `P_pf` DOUBLE, `Q_pf` DOUBLE, `p_se_error` DOUBLE, `q_se_error` DOUBLE, `p_pf_error` DOUBLE, `q_pf_error` DOUBLE, `Rstar_base` DOUBLE, `Xstar_base` DOUBLE, `tap_base` DOUBLE, `loss` DOUBLE, `Decision` INT, `detailed_flag` INT, `SI` DOUBLE, `line_Q1` DOUBLE, `line_Q2` DOUBLE, `line_Q3` DOUBLE, `OverLimit_flag` INT, `OverLimit_count` INT, `Fault_count` INT, `fault_rate` DOUBLE, `weak_index` DOUBLE, `cal_bus_name` STRING, `cal_bus_id` STRING, `load_factor` DOUBLE, `stepPhaseShiftIncrement` DOUBLE, `normalStep` INT, `neutralKV` DOUBLE, `tap_meas` DOUBLE}),
    (`PowerTransFormer` LABELS `PowerTransFormer` {`powertransformerID` INT PRIMARY KEY, `middle_point` INT, `id` INT, `I_off` INT, `K_off` INT, `J_off` INT, `sub` STRING, `name` STRING, `pos_x` DOUBLE, `pos_y` DOUBLE, `typename` STRING, `strid` STRING, `ifTerm` STRING, `winding_count` INT}),
    (`unit` LABELS `unit` {`unitid` INT PRIMARY KEY, `topoID` INT, `id` INT, `name` STRING, `Eq` INT, `position` STRING, `V_rate` DOUBLE, `P_rate` DOUBLE, `volt_n` DOUBLE, `node` STRING, `P` DOUBLE, `Q` DOUBLE, `Ue` DOUBLE, `Ang` DOUBLE, `off` INT, `Pimeas` DOUBLE, `Qimeas` DOUBLE, `Ue_meas` DOUBLE, `Ang_meas` DOUBLE, `P_max` DOUBLE, `P_min` DOUBLE, `Q_max` DOUBLE, `Q_min` DOUBLE, `pf` DOUBLE, `nd` INT, `bs` INT, `island` STRING, `pos_x` DOUBLE, `pos_y` DOUBLE, `typename` STRING, `volt` DOUBLE, `base_value` DOUBLE, `updatestatus` INT, `strid` STRING, `type` STRING, `Substation` STRING, `BaseVoltage` STRING, `VoltageLevel` STRING, `maxU` DOUBLE, `minU` DOUBLE, `r` DOUBLE, `x` DOUBLE, `r0` DOUBLE, `x0` DOUBLE, `AuxRatio` DOUBLE, `V` DOUBLE, `region_id` INT, `P_pf` DOUBLE, `Q_pf` DOUBLE, `Ri_V` DOUBLE, `insertFlag` INT, `Genload` DOUBLE, `Gentype` STRING, `p_se_error` DOUBLE, `q_se_error` DOUBLE, `p_pf_error` DOUBLE, `q_pf_error` DOUBLE, `P_base` DOUBLE, `Q_base` DOUBLE, `Decision` INT, `detailed_flag` INT, `SI` DOUBLE, `OverLimit_flag` INT, `OverLimit_count` INT, `Fault_count` INT, `fault_rate` DOUBLE, `weak_index` DOUBLE, `meas_t_next` DOUBLE, `parameter1` DOUBLE, `parameter2` DOUBLE, `parameter3` DOUBLE, `cal_bus_name` STRING, `cal_bus_id` STRING, `load_factor` DOUBLE}),
    (`Breaker` LABELS `Breaker` {`breakerid` INT PRIMARY KEY, `topoID` INT, `id` INT, `name` STRING, `volt` DOUBLE, `point` INT, `I_nd` INT, `J_nd` INT, `I_node` STRING, `J_node` STRING, `typename` STRING, `strid` STRING, `BaseVoltage` STRING, `VoltageLevel` STRING, `Substation` STRING, `Bay` STRING, `region_id` INT, `mvarating` DOUBLE, `CN_id` INT, `connecting_type` STRING, `connecting_dev` STRING, `point_base` INT, `Decision` INT, `SI` DOUBLE}),
    (`Disconnector` LABELS `Disconnector` {`disconnectorid` INT PRIMARY KEY, `topoID` INT, `id` INT, `name` STRING, `volt` DOUBLE, `point` INT, `I_nd` INT, `J_nd` INT, `I_node` STRING, `J_node` STRING, `typename` STRING, `strid` STRING, `BaseVoltage` STRING, `VoltageLevel` STRING, `Substation` STRING, `Bay` STRING, `region_id` INT, `CN_id` INT, `connecting_type` STRING, `connecting_dev` STRING, `point_base` INT, `Decision` INT, `SI` DOUBLE}),
    (`GroundDisconnector` LABELS `GroundDisconnector` {`grounddisid` INT PRIMARY KEY, `topoID` INT, `id` INT, `name` STRING, `volt` STRING, `point` INT, `I_nd` INT, `I_node` STRING, `typename` STRING, `strid` STRING, `BaseVoltage` STRING, `VoltageLevel` STRING, `Substation` STRING, `Bay` STRING, `region_id` INT}),
    (`ControlArea` LABELS `ControlArea` {`controlareaid` INT PRIMARY KEY, `name` STRING, `Parent` STRING, `P` DOUBLE, `Q` DOUBLE, `area_type` INT, `region_id` INT}),
    (`Bay` LABELS `Bay` {`bayid` INT PRIMARY KEY, `name` STRING, `pathName` STRING, `Substation` STRING, `BaseVoltage` STRING, `VoltageLevel` STRING, `type` STRING, `region_id` INT}),
    (`BaseVoltage` LABELS `BaseVoltage` {`basevoltageid` INT PRIMARY KEY, `name` STRING, `nomkV` DOUBLE, `region_id` INT}),
    (`VoltageLevel` LABELS `VoltageLevel` {`voltagelevelid` INT PRIMARY KEY, `name` STRING, `pathName` STRING, `highkV` DOUBLE, `lowkV` DOUBLE, `Substation` STRING, `BaseVoltage` STRING, `type` STRING, `region_id` INT}),
    (`SubVL` LABELS `SubVL` {`SubVLid` INT PRIMARY KEY, `Substation` STRING, `name` STRING, `ST_VL` STRING}),
    (`Substation` LABELS `Substation` {`subid` INT PRIMARY KEY, `id` INT, `name` STRING, `volt` DOUBLE, `subtype` STRING, `config` STRING, `nodes` INT, `islands` INT, `island` STRING, `dvname` STRING, `pos_x` DOUBLE, `pos_y` DOUBLE, `typename` STRING, `strid` STRING, `x` DOUBLE, `y` DOUBLE, `ControlArea` STRING, `P` DOUBLE, `Q` DOUBLE, `i_flag` INT, `mGdis_flag` INT, `mUnXf_flag` INT, `graph_name` STRING, `BaseVoltage` STRING, `region_id` INT, `graphID` DOUBLE, `PG_ID` STRING, `gridcomid` STRING, `dccid` STRING, `maintorgid` STRING, `gridcom_id_in_path` STRING, `ci` DOUBLE, `total_load` DOUBLE, `total_gen` DOUBLE, `gen_ci` DOUBLE, `load_ci` DOUBLE, `local_ci` DOUBLE, `market_ci` DOUBLE, `green_ci` DOUBLE, `gen_carbon` DOUBLE, `load_carbon` DOUBLE, `input_carbon` DOUBLE, `output_carbon` DOUBLE, `input_carbon_loss` DOUBLE, `output_carbon_loss` DOUBLE, `accum_carbon` DOUBLE, `avg_carbon` DOUBLE, `accum_power` DOUBLE, `avg_power` DOUBLE, `meas_cover_range` DOUBLE, `meas_yield` DOUBLE, `input_p` DOUBLE, `output_p` DOUBLE, `manual_unit_flag` INT, `manual_discrete_flag` INT, `manual_off_flag` INT, `Fault_overlimitQ1_count` INT, `Fault_overlimitQ2_count` INT, `Fault_overlimitQ3_count` INT, `Base_overlimit_count` INT, `parameter1` DOUBLE, `parameter2` DOUBLE, `parameter3` DOUBLE, `total_ele_supply_est` DOUBLE, `total_ele_use_est` DOUBLE, `rate_est_pass` DOUBLE, `total_ele_gen_meas` DOUBLE, `coverage_of_meas` DOUBLE, `pos_ele_gen_meas` DOUBLE, `neg_ele_gen_meas` DOUBLE, `total_load_meas` DOUBLE, `pos_load_meas` DOUBLE, `neg_load_meas` DOUBLE, `ele_gen_est` DOUBLE, `load_est` DOUBLE, `input_power` DOUBLE, `output_power` DOUBLE, `total_ele_gen` DOUBLE, `line_p_coverage_rate` DOUBLE, `line_q_coverage_rate` DOUBLE, `unit_p_coverage_rate` DOUBLE, `unit_q_coverage_rate` DOUBLE, `load_p_coverage_rate` DOUBLE, `load_q_coverage_rate` DOUBLE, `trans2_p_coverage_rate` DOUBLE, `trans2_q_coverage_rate` DOUBLE, `trans3_p_coverage_rate` DOUBLE, `trans3_q_coverage_rate` DOUBLE, `cp_coverage_rate` DOUBLE, `bus_meas_coverage_rate` DOUBLE, `fire_total_cap` DOUBLE, `fire_pos_ele_gen` DOUBLE, `fire_neg_ele_gen` DOUBLE, `fire_ele_gen_meas` DOUBLE, `fire_load_factor` DOUBLE, `water_total_cap` DOUBLE, `water_pos_ele_gen` DOUBLE, `water_neg_ele_gen` DOUBLE, `water_ele_gen_meas` DOUBLE, `water_load_factor` DOUBLE, `wind_total_cap` DOUBLE, `wind_pos_ele_gen` DOUBLE, `wind_neg_ele_gen` DOUBLE, `wind_ele_gen_meas` DOUBLE, `wind_load_factor` DOUBLE, `solar_total_cap` DOUBLE, `solar_pos_ele_gen` DOUBLE, `solar_neg_ele_gen` DOUBLE, `solar_ele_gen_meas` DOUBLE, `solar_load_factor` DOUBLE, `nuclear_total_cap` DOUBLE, `nuclear_pos_ele_gen` DOUBLE, `nuclear_neg_ele_gen` DOUBLE, `nuclear_ele_gen_meas` DOUBLE, `nuclear_load_factor` DOUBLE, `storage_total_cap` DOUBLE, `storage_pos_ele_gen` DOUBLE, `storage_neg_ele_gen` DOUBLE, `storage_ele_gen_meas` DOUBLE, `storage_load_factor` DOUBLE,`other_total_cap` DOUBLE, `other_pos_ele_gen` DOUBLE, `other_neg_ele_gen` DOUBLE, `other_ele_gen_meas` DOUBLE, `other_load_factor` DOUBLE,  `total_pass_rate` DOUBLE, `line_p_pass_rate` DOUBLE, `line_q_pass_rate` DOUBLE, `unit_p_pass_rate` DOUBLE, `unit_q_pass_rate` DOUBLE, `bus_volt_pass_rate` DOUBLE,`load_p_pass_rate` DOUBLE, `load_q_pass_rate` DOUBLE, `trans2_p_pass_rate` DOUBLE, `trans2_q_pass_rate` DOUBLE, `trans3_p_pass_rate` DOUBLE, `trans3_q_pass_rate` DOUBLE, `cs_q_pass_rate` DOUBLE, `cp_q_pass_rate` DOUBLE, `line_not_exceed_count` INT, `trans2_not_exceed_count` INT, `trans3_not_exceed_count` INT, `bus_not_exceed_count` INT, `sub_cap` DOUBLE, `sub_trans_ele` DOUBLE, `total_coverage` DOUBLE, `acline_dot_count` INT, `acline_dot_meas_count` INT, `trans2_count` INT, `trans2_meas_count` INT, `trans3_count` INT, `trans3_meas_count` INT, `unit_count` INT, `unit_meas_count` INT, `load_count` INT, `load_meas_count` INT, `bus_count` INT, `bus_meas_count` INT}),
    (`FaultGroup` LABELS `FaultGroup` {`faultgroupid` INT PRIMARY KEY, `id` INT, `groupname` STRING, `describe` STRING, `faultnumber` INT, `screen_flag` INT, `analysis_flag` INT}),
    (`Fault` LABELS `Fault` {`faultid` INT PRIMARY KEY, `id` INT, `name` STRING, `faulttype` STRING, `faultdevname` LIST<STRING>, `faultdevtype` LIST<STRING>, `faultdevSub` LIST<STRING>, `faultdevSubid` LIST<INT>, `volt` LIST<DOUBLE>, `from_topoID` LIST<INT>, `to_topoID` LIST<INT>, `line_index` LIST<INT>, `devid` LIST<INT>, `groupname` STRING, `SI` DOUBLE, `decesion_flag` INT, `fastscreen_flag` INT, `detailedanalysis_flag` INT, `FaultGroup_select_flag` INT, `Fault_activation_flag` INT, `linevio` INT, `linevioQ1` INT, `linevioQ2` INT, `linevioQ3` INT, `volvio` INT}),
    (`CN` LABELS `CN` {`cnid` INT PRIMARY KEY, `topoID` INT, `CN_id` INT, `volt` DOUBLE, `pos_x` DOUBLE, `pos_y` DOUBLE, `strid` STRING}),
    (`GeneratingUnit` LABELS `GeneratingUnit` {`GeneratingUnitId` INT PRIMARY KEY, `id` INT, `minimumOperatingMW` DOUBLE, `initialMW` DOUBLE, `volt_name` DOUBLE, `name` STRING, `maximumOperatingMW` DOUBLE}),
    (`neutral_point` LABELS `neutral_point` {`middleid` INT PRIMARY KEY, `middle_point` INT, `id` INT, `I_off` INT, `K_off` INT, `J_off` INT, `sub` STRING, `name` STRING, `pos_x` DOUBLE, `pos_y` DOUBLE, `typename` STRING, `strid` STRING}),
    (`meas` LABELS `meas` {`measid` STRING PRIMARY KEY, `id` STRING, `type_name` STRING, `strid` STRING, `strName` STRING, `devName` STRING, `off` INT, `off_previous` INT, `f_usable` INT, `P` DOUBLE, `Q` DOUBLE, `P_previous` DOUBLE, `Q_previous` DOUBLE, `previous_time` STRING, `PManual` DOUBLE, `QManual` DOUBLE, `PPseudo` DOUBLE, `QPseudo` DOUBLE, `PBias` DOUBLE, `QBias` DOUBLE, `PBias_day` DOUBLE, `QBias_day` DOUBLE, `PBias_month` DOUBLE, `QBias_month` DOUBLE, `PBias_year` DOUBLE, `QBias_year` DOUBLE, `PVari` DOUBLE, `QVari` DOUBLE, `PVari_day` DOUBLE, `QVari_day` DOUBLE, `PVari_month` DOUBLE, `QVari_month` DOUBLE, `PVari_year` DOUBLE, `QVari_year` DOUBLE, `PNum` INT, `QNum` INT, `PFlag` INT, `QFlag` INT, `P_ManualFlag` INT, `Q_ManualFlag` INT, `P_PseudoFlag` INT, `Q_PseudoFlag` INT, `meas_A` DOUBLE, `meas_B` DOUBLE, `tap` DOUBLE, `tapFlag` INT}),
    (`discrete` LABELS `discrete` {`discid` STRING PRIMARY KEY, `id` STRING, `status` INT, `statusM` INT, `status_previous` INT, `previous_time` STRING, `flag` INT, `flagM` INT, `strid` STRING, `strName` STRING, `devName` STRING, `off` INT, `f_usable` INT, `type_name` STRING, `updateFlag` INT}),
    (`disManage` LABELS `disManage` {`disManageid` INT PRIMARY KEY, `id` INT, `strid` STRING, `name` STRING, `status` INT, `statusM` INT, `flagM` INT, `updateFlag` INT}),
    (`measManage` LABELS `measManage` {`measManageid` STRING PRIMARY KEY, `id` INT, `strid` STRING, `name` STRING, `P` DOUBLE, `Q` DOUBLE, `Meas_A` DOUBLE, `Meas_B` DOUBLE, `off` INT}),
    (`device_counter` LABELS `device_counter` {`device_counter_id` STRING PRIMARY KEY, `id` INT, `strid` STRING, `bus` INT, `bus_meas` INT, `l_oad` INT, `load_meas` INT, `unit` INT, `unit_meas` INT, `two_port` INT, `two_port_meas` INT, `three_port` INT, `three_port_meas` INT, `two_tap` INT, `two_tap_meas` INT, `three_tap` INT, `three_tap_meas` INT, `aclineend` INT, `aclineend_meas` INT, `cp` INT, `cp_meas` INT, `breaker` INT, `breaker_meas` INT, `disconnector` INT, `disconnector_meas` INT, `cs` INT, `cs_meas` INT, `convertor` INT, `convertor_meas` INT, `grounddis` INT, `grounddis_meas` INT, `pre_1` INT, `pre_1_meas` INT, `pre_2` INT, `pre_2_meas` INT, `pre_3` INT, `pre_3_meas` INT}),
    (`powergrid` LABELS `powergrid` {`powergridid` STRING PRIMARY KEY, `id` STRING, `level` STRING, `name` STRING, `name_abbreviation` STRING, `pg_owner` STRING, `parent_id` STRING, `rel_id` STRING}),
    (`gridcom` LABELS `gridcom` {`gridid` STRING PRIMARY KEY, `id` STRING, `level` STRING, `name` STRING, `sg_owner` STRING, `parent_id` STRING, `PG_ID` STRING, `lat` DOUBLE, `lng` DOUBLE, `adm_code` STRING, `adm_area` STRING, `ci` DOUBLE, `total_load` DOUBLE, `total_gen` DOUBLE, `gen_ci` DOUBLE, `load_ci` DOUBLE, `local_ci` DOUBLE, `market_ci` DOUBLE, `green_ci` DOUBLE, `gen_carbon` DOUBLE, `load_carbon` DOUBLE, `input_carbon` DOUBLE, `output_carbon` DOUBLE, `input_carbon_loss` DOUBLE, `output_carbon_loss` DOUBLE, `accum_carbon` DOUBLE, `avg_carbon` DOUBLE, `accum_power` DOUBLE, `avg_power` DOUBLE, `input_p` DOUBLE, `output_p` DOUBLE, `total_gen_meas` DOUBLE, `total_load_meas` DOUBLE, `total_loss` DOUBLE, `parameter1` DOUBLE, `parameter2` DOUBLE, `parameter3` DOUBLE, `fire_p` DOUBLE, `water_p` DOUBLE, `wind_p` DOUBLE, `solar_p` DOUBLE, `storage_p` DOUBLE, `nuclear_p` DOUBLE, `otherpower_p` DOUBLE, `distributed_p` DOUBLE, `fire_p_meas` DOUBLE, `water_p_meas` DOUBLE, `wind_p_meas` DOUBLE, `solar_p_meas` DOUBLE, `storage_p_meas` DOUBLE, `nuclear_p_meas` DOUBLE, `otherpower_p_meas` DOUBLE, `distributed_p_meas` DOUBLE, `fire_p_rate` DOUBLE, `water_p_rate` DOUBLE, `wind_p_rate` DOUBLE, `solar_p_rate` DOUBLE, `storage_p_rate` DOUBLE, `nuclear_p_rate` DOUBLE, `otherpower_p_rate` DOUBLE, `distributed_p_rate` DOUBLE, `Fault_overlimitQ1_count` INT, `Fault_overlimitQ2_count` INT, `Fault_overlimitQ3_count` INT, `Base_overlimit_count` INT, `total_ele_supply_est` DOUBLE, `total_ele_use_est` DOUBLE, `rate_est_pass` DOUBLE, `total_ele_gen_meas` DOUBLE, `coverage_of_meas` DOUBLE, `pos_ele_gen_meas` DOUBLE, `neg_ele_gen_meas` DOUBLE, `pos_load_meas` DOUBLE, `neg_load_meas` DOUBLE, `ele_gen_est` DOUBLE, `load_est` DOUBLE, `input_power` DOUBLE, `output_power` DOUBLE, `total_ele_gen` DOUBLE, `line_p_coverage_rate` DOUBLE, `line_q_coverage_rate` DOUBLE, `unit_p_coverage_rate` DOUBLE, `unit_q_coverage_rate` DOUBLE, `load_p_coverage_rate` DOUBLE, `load_q_coverage_rate` DOUBLE, `trans2_p_coverage_rate` DOUBLE, `trans2_q_coverage_rate` DOUBLE, `trans3_p_coverage_rate` DOUBLE, `trans3_q_coverage_rate` DOUBLE, `cp_coverage_rate` DOUBLE, `bus_meas_coverage_rate` DOUBLE, `fire_total_cap` DOUBLE, `fire_pos_ele_gen` DOUBLE, `fire_neg_ele_gen` DOUBLE, `fire_ele_gen_meas` DOUBLE, `fire_load_factor` DOUBLE, `water_total_cap` DOUBLE, `water_pos_ele_gen` DOUBLE, `water_neg_ele_gen` DOUBLE, `water_ele_gen_meas` DOUBLE, `water_load_factor` DOUBLE, `wind_total_cap` DOUBLE, `wind_pos_ele_gen` DOUBLE, `wind_neg_ele_gen` DOUBLE, `wind_ele_gen_meas` DOUBLE, `wind_load_factor` DOUBLE, `solar_total_cap` DOUBLE, `solar_pos_ele_gen` DOUBLE, `solar_neg_ele_gen` DOUBLE, `solar_ele_gen_meas` DOUBLE, `solar_load_factor` DOUBLE, `nuclear_total_cap` DOUBLE, `nuclear_pos_ele_gen` DOUBLE, `nuclear_neg_ele_gen` DOUBLE, `nuclear_ele_gen_meas` DOUBLE, `nuclear_load_factor` DOUBLE, `storage_total_cap` DOUBLE, `storage_pos_ele_gen` DOUBLE, `storage_neg_ele_gen` DOUBLE, `storage_ele_gen_meas` DOUBLE, `storage_load_factor` DOUBLE,`other_total_cap` DOUBLE, `other_pos_ele_gen` DOUBLE, `other_neg_ele_gen` DOUBLE, `other_ele_gen_meas` DOUBLE, `other_load_factor` DOUBLE,  `total_pass_rate` DOUBLE, `line_p_pass_rate` DOUBLE, `line_q_pass_rate` DOUBLE, `unit_p_pass_rate` DOUBLE, `unit_q_pass_rate` DOUBLE, `bus_volt_pass_rate` DOUBLE,`load_p_pass_rate` DOUBLE, `load_q_pass_rate` DOUBLE, `trans2_p_pass_rate` DOUBLE, `trans2_q_pass_rate` DOUBLE, `trans3_p_pass_rate` DOUBLE, `trans3_q_pass_rate` DOUBLE, `cs_q_pass_rate` DOUBLE, `cp_q_pass_rate` DOUBLE, `line_not_exceed_count` INT, `trans2_not_exceed_count` INT, `trans3_not_exceed_count` INT, `bus_not_exceed_count` INT, `line_p_meas` DOUBLE, `line_q_meas` DOUBLE, `unit_p_meas` DOUBLE, `unit_q_meas` DOUBLE, `load_p_meas` DOUBLE, `laod_q_meas` DOUBLE, `trans2_p_meas` DOUBLE, `trans2_q_meas` DOUBLE, `trans3_p_meas` DOUBLE, `trans3_q_meas` DOUBLE, `cp_q_meas` DOUBLE, `bus_volt_meas` DOUBLE}),
    (`gridcom_stat` LABELS `gridcom_stat` {`gridid` STRING PRIMARY KEY, `id` STRING, `count_acline` DOUBLE, `count_unit` DOUBLE, `count_load` DOUBLE, `count_trans2` DOUBLE, `count_trans3` DOUBLE, `count_bus_section` DOUBLE, `count_bus` DOUBLE, `count_CP` DOUBLE, `count_CS` DOUBLE, `count_sub` DOUBLE, `count_AClinedotP` DOUBLE, `count_AClinedotQ` DOUBLE, `count_unit_SVG` DOUBLE, `count_unitP` DOUBLE, `count_unitQ` DOUBLE, `count_loadP` DOUBLE, `count_loadQ` DOUBLE, `count_twoportP` DOUBLE, `count_twoportQ` DOUBLE, `count_threeportP` DOUBLE, `count_threeportQ` DOUBLE, `count_CPQ` DOUBLE, `count_busV` DOUBLE, `se_OKNum_AClinedot` DOUBLE, `se_OKNum_unit` DOUBLE, `se_OKNum_load` DOUBLE, `se_OKNum_twoport` DOUBLE, `se_OKNum_threeport` DOUBLE, `se_OKNum_CP` DOUBLE, `se_OKNum_bus` DOUBLE, `distribution_gen_total_p` DOUBLE, `area_load` DOUBLE, `area_gen` DOUBLE, `area_input` DOUBLE, `area_output` DOUBLE, `count_acline_p_qualified` DOUBLE, `count_acline_q_qualified` DOUBLE, `count_unit_p_qualified` DOUBLE, `count_unit_q_qualified` DOUBLE, `count_load_p_qualified` DOUBLE, `count_load_q_qualified` DOUBLE, `count_trans2_p_qualified` DOUBLE, `count_trans2_q_qualified` DOUBLE, `count_trans3_p_qualified` DOUBLE, `count_trans3_q_qualified` DOUBLE, `count_bus_v_qualified` DOUBLE, `total_acline_pf` DOUBLE, `total_acline_se` DOUBLE, `total_gen_pf` DOUBLE, `total_gen_se` DOUBLE, `total_load_pf` DOUBLE, `total_load_se` DOUBLE, `total_trans2_pf` DOUBLE, `total_trans2_se` DOUBLE, `total_trans3_pf` DOUBLE, `total_trans3_se` DOUBLE, `count_breaker` DOUBLE, `count_disconnector` DOUBLE, `acline_analysis_num` DOUBLE, `unit_analysis_num` DOUBLE, `bus_analysis_num` DOUBLE, `load_analysis_num` DOUBLE, `trans2_analysis_num` DOUBLE, `trans3_analysis_num` DOUBLE, `area_loss` DOUBLE, `count_sub_meas` DOUBLE}),
    (`gridcom_stat_sld` LABELS `gridcom_stat_sld` {`gridid` STRING PRIMARY KEY, `id` STRING, `count_sub` DOUBLE, `count_sub_500` DOUBLE, `count_sub_220` DOUBLE, `count_sub_110` DOUBLE, `count_sub_35` DOUBLE, `count_sub_10` DOUBLE, `count_breaker` DOUBLE, `count_breaker_500` DOUBLE, `count_breaker_220` DOUBLE, `count_breaker_110` DOUBLE, `count_breaker_35` DOUBLE, `count_breaker_10` DOUBLE, `count_dis` DOUBLE, `count_dis_500` DOUBLE, `count_dis_220` DOUBLE, `count_dis_110` DOUBLE, `count_dis_35` DOUBLE, `count_dis_10` DOUBLE, `count_gdis` DOUBLE, `count_gdis_500` DOUBLE, `count_gdis_220` DOUBLE, `count_gdis_110` DOUBLE, `count_gdis_35` DOUBLE, `count_gdis_10` DOUBLE, `count_acline` DOUBLE, `count_acline_500` DOUBLE, `count_acline_220` DOUBLE, `count_acline_110` DOUBLE, `count_acline_35` DOUBLE, `count_acline_10` DOUBLE, `count_aclinedot` DOUBLE, `count_aclinedot_500` DOUBLE, `count_aclinedot_220` DOUBLE, `count_aclinedot_110` DOUBLE, `count_aclinedot_35` DOUBLE, `count_aclinedot_10` DOUBLE, `count_unit` DOUBLE, `count_unit_500` DOUBLE, `count_unit_220` DOUBLE, `count_unit_110` DOUBLE, `count_unit_35` DOUBLE, `count_unit_10` DOUBLE, `count_load` DOUBLE, `count_load_500` DOUBLE, `count_load_220` DOUBLE, `count_load_110` DOUBLE, `count_load_35` DOUBLE, `count_load_10` DOUBLE, `count_trans2` DOUBLE, `count_trans2_500` DOUBLE, `count_trans2_220` DOUBLE, `count_trans2_110` DOUBLE, `count_trans2_35` DOUBLE, `count_trans2_10` DOUBLE, `count_trans3` DOUBLE, `count_trans3_500` DOUBLE, `count_trans3_220` DOUBLE, `count_trans3_110` DOUBLE, `count_trans3_35` DOUBLE, `count_trans3_10` DOUBLE, `count_cp` DOUBLE, `count_cp_500` DOUBLE, `count_cp_220` DOUBLE, `count_cp_110` DOUBLE, `count_cp_35` DOUBLE, `count_cp_10` DOUBLE, `count_cs` DOUBLE, `count_cs_500` DOUBLE, `count_cs_220` DOUBLE, `count_cs_110` DOUBLE, `count_cs_35` DOUBLE, `count_cs_10` DOUBLE, `count_bus` DOUBLE, `count_bus_500` DOUBLE, `count_bus_220` DOUBLE, `count_bus_110` DOUBLE, `count_bus_35` DOUBLE, `count_bus_10` DOUBLE, `count_discrete` DOUBLE, `count_discrete_500` DOUBLE, `count_discrete_220` DOUBLE, `count_discrete_110` DOUBLE, `count_discrete_35` DOUBLE, `count_discrete_10` DOUBLE, `count_meas` DOUBLE, `count_meas_500` DOUBLE, `count_meas_220` DOUBLE, `count_meas_110` DOUBLE, `count_meas_35` DOUBLE, `count_meas_10` DOUBLE, `total_coverage` DOUBLE, `coverage_aclineP` DOUBLE, `coverage_aclineQ` DOUBLE, `coverage_unitP` DOUBLE, `coverage_unitQ` DOUBLE, `coverage_loadP` DOUBLE, `coverage_loadQ` DOUBLE, `coverage_trans2P` DOUBLE, `coverage_trans2Q` DOUBLE, `coverage_trans3P` DOUBLE, `coverage_trans3Q` DOUBLE, `coverage_cp` DOUBLE, `coverage_bus` DOUBLE, `total_coverage_rower` DOUBLE, `coverage_aclineP_rower` DOUBLE, `coverage_aclineQ_rower` DOUBLE, `coverage_unitP_rower` DOUBLE, `coverage_unitQ_rower` DOUBLE, `coverage_loadP_rower` DOUBLE, `coverage_loadQ_rower` DOUBLE, `coverage_trans2P_rower` DOUBLE, `coverage_trans2Q_rower` DOUBLE, `coverage_trans3P_rower` DOUBLE, `coverage_trans3Q_rower` DOUBLE, `coverage_cp_rower` DOUBLE, `coverage_bus_rower` DOUBLE}),
    (`dcc` LABELS `dcc` {`dccid` STRING PRIMARY KEY, `id` STRING, `company_id` STRING, `name` STRING, `level` STRING, `dcc_owner` STRING, `parent_id` STRING, `PG_ID` STRING}),
    (`maintorg` LABELS `maintorg` {`maintorgid` STRING PRIMARY KEY, `id` STRING, `name` STRING, `ma_owner` STRING, `parent_id` STRING, `PG_ID` STRING}),
    (`FaultGroup`)-[`faultgroup_fault`:`faultgroup_fault`]->(`Fault`),
    (`Fault`)-[`fault_aclinedot_overlimit`:`fault_aclinedot_overlimit` {`OverLimit_value` DOUBLE, `OverLimit_percent` DOUBLE}]->(`ACline_dot`),
    (`Fault`)-[`fault_transformWinding_overlimit`:`fault_transformWinding_overlimit` {`OverLimit_value` DOUBLE, `OverLimit_percent` DOUBLE}]->(`TransformWinding`),
    (`Fault`)-[`fault_bus_overlimit`:`fault_bus_overlimit` {`OverLimit_value` DOUBLE, `OverLimit_percent` DOUBLE}]->(`BUS`),
    (`Fault`)-[`fault_aclinedot_select`:`fault_aclinedot_select`]->(`ACline_dot`),
    (`Fault`)-[`fault_transformWinding_select`:`fault_transformWinding_select`]->(`TransformWinding`),
    (`Fault`)-[`fault_unit_select`:`fault_unit_select`]->(`unit`),
    (`ControlArea`)-[`controlarea_sub`:`controlarea_sub`]->(`Substation`),
    (`Bay`)-[`bay_bus`:`bay_bus`]->(`BUS`),
    (`Bay`)-[`bay_aclinedot`:`bay_aclinedot`]->(`ACline_dot`),
    (`Bay`)-[`bay_load`:`bay_load`]->(`l_oad`),
    (`Bay`)-[`bay_cp`:`bay_cp`]->(`C_P`),
    (`Bay`)-[`bay_cs`:`bay_cs`]->(`C_S`),
    (`Bay`)-[`bay_breaker`:`bay_breaker`]->(`Breaker`),
    (`Bay`)-[`bay_dis`:`bay_dis`]->(`Disconnector`),
    (`Bay`)-[`bay_transformWinding`:`bay_transformWinding`]->(`TransformWinding`),
    (`Bay`)-[`bay_grounddis`:`bay_grounddis`]->(`GroundDisconnector`),
    (`Substation`)-[`sub_stvl`:`sub_stvl`]->(`SubVL`),
    (`SubVL`)-[`stvl_bus`:`stvl_bus`]->(`BUS`),
    (`SubVL`)-[`stvl_aclinedot`:`stvl_aclinedot`]->(`ACline_dot`),
    (`SubVL`)-[`stvl_load`:`stvl_load`]->(`l_oad`),
    (`SubVL`)-[`stvl_cp`:`stvl_cp`]->(`C_P`),
    (`SubVL`)-[`stvl_cs`:`stvl_cs`]->(`C_S`),
    (`SubVL`)-[`stvl_transformWinding`:`stvl_transformWinding`]->(`TransformWinding`),
    (`SubVL`)-[`stvl_breaker`:`stvl_breaker`]->(`Breaker`),
    (`SubVL`)-[`stvl_dis`:`stvl_dis`]->(`Disconnector`),
    (`SubVL`)-[`stvl_grounddis`:`stvl_grounddis`]->(`GroundDisconnector`),
    (`SubVL`)-[`stvl_unit`:`stvl_unit`]->(`unit`),
    (`SubVL`)-[`stvl_topo`:`stvl_topo`]->(`TopoND`),
    (`Substation`)-[`sub_cn`:`sub_cn`]->(`CN`),
    (`BaseVoltage`)-[`basevoltage_cn`:`basevoltage_cn`]->(`CN`),
    (`SubVL`)-[`stvl_cn`:`stvl_cn`]->(`CN`),
    (`VoltageLevel`)-[`voltagelevel_cn`:`voltagelevel_cn`]->(`CN`),
    (`Substation`)-[`sub_generatingunit`:`sub_generatingunit`]->(`GeneratingUnit`),
    (`BaseVoltage`)-[`basevoltage_generatingunit`:`basevoltage_generatingunit`]->(`GeneratingUnit`),
    (`SubVL`)-[`stvl_generatingunit`:`stvl_generatingunit`]->(`GeneratingUnit`),
    (`VoltageLevel`)-[`voltagelevel_generatingunit`:`voltagelevel_generatingunit`]->(`GeneratingUnit`),
    (`unit`)-[`generating_unit`:`generating_unit`]->(`GeneratingUnit`),
    (`Substation`)-[`np_sub`:`np_sub`]->(`neutral_point`),
    (`Substation`)-[`device_counter_sub`:`device_counter_sub`]->(`device_counter`),
    (`gridcom`)-[`device_counter_gridcom`:`device_counter_gridcom`]->(`device_counter`),
    (`TopoND`)-[`topo_connect`:`topo_connect` {`tap_bus` INT, `z_bus` INT, `flag` INT, `control_bus` INT, `side` INT, `min_tap` DOUBLE, `max_tap` DOUBLE, `step_size` DOUBLE, `th` DOUBLE, `em` DOUBLE, `sh` DOUBLE, `outage` INT, `circuit` INT, `kcount` DOUBLE, `P_TLPF` DOUBLE, `Q_TLPF` DOUBLE, `hbsum` DOUBLE, `Ri_eP` DOUBLE, `Ri_eQ` DOUBLE, `reverse` INT, `tap_type_id` STRING, `CA_bridge` INT, `mainland_side` INT, `CA_solver` INT, `volt` STRING, `device_type` STRING, `from_busname` STRING, `to_busname` STRING, `hB` DOUBLE, `G` DOUBLE, `B` DOUBLE, `BIJ` DOUBLE, `transformer_final_turns_ratio` DOUBLE, `M_P_TLPF` DOUBLE, `M_Q_TLPF` DOUBLE, `line_Q1` DOUBLE, `line_Q2` DOUBLE, `line_Q3` DOUBLE, `from_CP` DOUBLE, `to_CP` DOUBLE}]->(`TopoND`),
    (`ACline_dot`)-[`aclinedot_cn`:`aclinedot_cn`]->(`CN`),
    (`TransformWinding`)-[`TransformWinding_PowerTransFormer`:`TransformWinding_PowerTransFormer` {`name` STRING, `Ri_eP` DOUBLE, `Ri_eQ` DOUBLE, `CA_bridge` INT, `Mainland_side` INT}]->(`PowerTransFormer`),
    (`PowerTransFormer`)-[`PowerTransFormer_TransformWinding`:`PowerTransFormer_TransformWinding` {`name` STRING, `Ri_eP` DOUBLE, `Ri_eQ` DOUBLE, `CA_bridge` INT, `Mainland_side` INT}]->(`TransformWinding`),
    (`CN`)-[`CN_transformWinding`:`CN_transformWinding`]->(`TransformWinding`),
    (`Breaker`)-[`connected_Breaker_CN`:`connected_Breaker_CN`]->(`CN`),
    (`BUS`)-[`connected_Bus_CN`:`connected_Bus_CN`]->(`CN`),
    (`C_P`)-[`connected_Compensator_P_CN`:`connected_Compensator_P_CN`]->(`CN`),
    (`C_S`)-[`connected_Compensator_S_CN`:`connected_Compensator_S_CN`]->(`CN`),
    (`Disconnector`)-[`connected_Disconnector_CN`:`connected_Disconnector_CN`]->(`CN`),
    (`GroundDisconnector`)-[`connected_GroundDisconnector_CN`:`connected_GroundDisconnector_CN`]->(`CN`),
    (`l_oad`)-[`connected_Load_CN`:`connected_Load_CN`]->(`CN`),
    (`unit`)-[`connected_Unit_CN`:`connected_Unit_CN`]->(`CN`),
    (`meas`)-[`Meas_Bus`:`Meas_Bus`]->(`BUS`),
    (`meas`)-[`Meas_AClinedot`:`Meas_AClinedot`]->(`ACline_dot`),
    (`meas`)-[`Meas_Load`:`Meas_Load`]->(`l_oad`),
    (`meas`)-[`Meas_Unit`:`Meas_Unit`]->(`unit`),
    (`meas`)-[`Meas_transformWinding`:`Meas_transformWinding`]->(`TransformWinding`),
    (`meas`)-[`Meas_CP`:`Meas_CP`]->(`C_P`),
    (`meas`)-[`Meas_CS`:`Meas_CS`]->(`C_S`),
    (`meas`)-[`Meas_Breaker`:`Meas_Breaker`]->(`Breaker`),
    (`discrete`)-[`discrete_breaker`:`discrete_breaker`]->(`Breaker`),
    (`discrete`)-[`discrete_dis`:`discrete_dis`]->(`Disconnector`),
    (`discrete`)-[`discrete_grounddis`:`discrete_grounddis`]->(`GroundDisconnector`),
    (`meas`)-[`Meas_sub`:`Meas_sub`]->(`Substation`),
    (`discrete`)-[`discrete_sub`:`discrete_sub`]->(`Substation`),
    (`meas`)-[`Meas_measManage`:`Meas_measManage`]->(`measManage`),
    (`discrete`)-[`discrete_disManage`:`discrete_disManage`]->(`disManage`),
    (`Substation`)-[`connected_Sub_Compensator_S`:`connected_Sub_Compensator_S` {`cid` INT}]->(`C_S`),
    (`Substation`)-[`connected_Sub_Aclinedot`:`connected_Sub_Aclinedot` {`cid` INT}]->(`ACline_dot`),
    (`Substation`)-[`connected_Sub_Breaker`:`connected_Sub_Breaker` {`cid` INT}]->(`Breaker`),
    (`Substation`)-[`connected_Sub_Bus`:`connected_Sub_Bus` {`cid` INT}]->(`BUS`),
    (`Substation`)-[`connected_Sub_Compensator_P`:`connected_Sub_Compensator_P` {`cid` INT}]->(`C_P`),
    (`Substation`)-[`connected_Sub_Disconnector`:`connected_Sub_Disconnector` {`cid` INT}]->(`Disconnector`),
    (`Substation`)-[`connected_Sub_GroundDisconnector`:`connected_Sub_GroundDisconnector` {`cid` INT}]->(`GroundDisconnector`),
    (`Substation`)-[`connected_Sub_Load`:`connected_Sub_Load` {`cid` INT}]->(`l_oad`),
    (`Substation`)-[`connected_Sub_transformWinding`:`connected_Sub_transformWinding` {`cid` INT}]->(`TransformWinding`),
    (`Substation`)-[`connected_Sub_Unit`:`connected_Sub_Unit` {`cid` INT}]->(`unit`),
    (`Substation`)-[`connected_Sub_Fault`:`connected_Sub_Fault` {`cid` INT}]->(`Fault`),
    (`CN`)-[`cn_subid`:`cn_subid`]->(`Substation`),
    (`TopoND`)-[`topoid_subid`:`topoid_subid`]->(`Substation`),
    (`TopoND`)-[`topo_bus`:`topo_bus`]->(`BUS`),
    (`TopoND`)-[`topo_transformWinding`:`topo_transformWinding`]->(`TransformWinding`),
    (`TopoND`)-[`topo_unit`:`topo_unit`]->(`unit`),
    (`TopoND`)-[`topo_load`:`topo_load`]->(`l_oad`),
    (`TopoND`)-[`topo_compensatorP`:`topo_compensatorP`]->(`C_P`),
    (`TopoND`)-[`topo_aclinedot`:`topo_aclinedot`]->(`ACline_dot`),
    (`TopoND`)-[`topo_neutral`:`topo_neutral`]->(`neutral_point`),
    (`powergrid`)-[`powergrid_substation`:`powergrid_substation`]->(`Substation`),
    (`powergrid`)-[`powergrid_powergrid`:`powergrid_powergrid`]->(`powergrid`),
    (`gridcom`)-[`gridcom_gridcom_stat`:`gridcom_gridcom_stat`]->(`gridcom_stat`),
    (`gridcom`)-[`gridcom_gridcom_stat_sld`:`gridcom_gridcom_stat_sld`]->(`gridcom_stat_sld`),
    (`gridcom`)-[`connected_grid_sub`:`connected_grid_sub`]->(`Substation`),
    (`gridcom`)-[`gridcom_gridcom`:`gridcom_gridcom`]->(`gridcom`),
    (`gridcom`)-[`gridcom_powergrid`:`gridcom_powergrid`]->(`powergrid`),
    (`dcc`)-[`connected_dcc_sub`:`connected_dcc_sub`]->(`Substation`),
    (`dcc`)-[`dcc_dcc`:`dcc_dcc`]->(`dcc`),
    (`dcc`)-[`dcc_powergrid`:`dcc_powergrid`]->(`powergrid`),
    (`maintorg`)-[`connected_maintorg_sub`:`connected_maintorg_sub`]->(`Substation`),
    (`maintorg`)-[`maintorg_maintorg`:`maintorg_maintorg`]->(`maintorg`),
    (`maintorg`)-[`maintorg_powergrid`:`maintorg_powergrid`]->(`powergrid`),
    (`ACline`)-[`ACline_connect_ACline_dot`:`ACline_connect_ACline_dot`]->(`ACline_dot`),
    (`ACline`)-[`ACline_connect_AclineSegment`:`ACline_connect_AclineSegment`]->(`AClineSegment`),
    (`AClineSegment`)-[`AClineSegment_connect_ACline_dot`:`ACline_dot_connect_AclineSegment`]->(`ACline_dot`),
    (`AClineSegment`)-[`AClineSegment_AClineSegment`:`AClineSegment_AClineSegment`]->(`AClineSegment`),

    (`BaseVoltage`)-[`basevoltage_aclinedot`:`basevoltage_aclinedot`]->(`ACline_dot`),
    (`BaseVoltage`)-[`basevoltage_load`:`basevoltage_load`]->(`l_oad`),
    (`BaseVoltage`)-[`basevoltage_bus`:`basevoltage_bus`]->(`BUS`),
    (`BaseVoltage`)-[`basevoltage_cp`:`basevoltage_cp`]->(`C_P`),
    (`BaseVoltage`)-[`basevoltage_cs`:`basevoltage_cs`]->(`C_S`),
    (`BaseVoltage`)-[`basevoltage_transformwinding`:`basevoltage_transformwinding`]->(`TransformWinding`),
    (`BaseVoltage`)-[`basevoltage_unit`:`basevoltage_unit`]->(`unit`),
    (`BaseVoltage`)-[`basevoltage_breaker`:`basevoltage_breaker`]->(`Breaker`),
    (`BaseVoltage`)-[`basevoltage_dis`:`basevoltage_dis`]->(`Disconnector`),
    (`BaseVoltage`)-[`basevoltage_grounddis`:`basevoltage_grounddis`]->(`GroundDisconnector`),

    (`l_oad`)-[`connected_Load_Sub`:`connected_Load_Sub` {`cid` INT}]->(`Substation`),
    (`unit`)-[`connected_Unit_Sub`:`connected_Unit_Sub` {`cid` INT}]->(`Substation`),
    (`ACline_dot`)-[`connected_Aclinedot_Sub`:`connected_Aclinedot_Sub` {`cid` INT}]->(`Substation`),
    (`C_S`)-[`connected_Compensator_S_Sub`:`connected_Compensator_S_Sub` {`cid` INT}]->(`Substation`),
    (`Breaker`)-[`connected_Breaker_Sub`:`connected_Breaker_Sub` {`cid` INT}]->(`Substation`),
    (`BUS`)-[`connected_Bus_Sub`:`connected_Bus_Sub` {`cid` INT}]->(`Substation`),
    (`C_P`)-[`connected_Compensator_P_Sub`:`connected_Compensator_P_Sub` {`cid` INT}]->(`Substation`),
    (`Disconnector`)-[`connected_Disconnector_Sub`:`connected_Disconnector_Sub` {`cid` INT}]->(`Substation`),
    (`GroundDisconnector`)-[`connected_GroundDisconnector_Sub`:`connected_GroundDisconnector_Sub` {`cid` INT}]->(`Substation`),
    (`TransformWinding`)-[`connected_transformWinding_Sub`:`connected_transformWinding_Sub` {`cid` INT}]->(`Substation`)

}
"""